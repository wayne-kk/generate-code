{
  "blocksMap": {
    "Q3T6pdLhc5FeLkq9I8EiT": {
      "code": "function Hero_15({\n  announcement = 'Announcing our next round of funding. Read more →',\n  title = 'Elevate Your Online Presence with Innovative Data Solutions',\n  description = 'Discover how our data-driven approaches can transform your business, enhancing digital engagement and driving growth.',\n  primaryButtonTextAttr = 'text=Get Started&link=/',\n  secondaryButtonTextAttr = 'text=Learn More&link=/',\n}) {\n  return (\n    <div className=\"w-full bg-white dark:bg-slate-800 overflow-hidden\">\n      <div className=\"relative isolate max-w-7xl mx-auto py-10 px-4 lg:px-8\">\n        <div className=\"absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80\" aria-hidden=\"true\">\n          <div\n            className=\"relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-sky-500 to-sky-400 opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]\"\n            style={{ clipPath: 'polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)' }}\n          >\n          </div>\n        </div>\n        <div className=\"py-32 sm:py-48 lg:py-56\">\n          <div className=\"hidden sm:mb-8 sm:flex sm:justify-center\">\n            <div className=\"relative group rounded-full px-4 py-1.5 text-sm text-sky-400 dark:text-sky-300 ring-1 ring-sky-300 dark:ring-sky-300 hover:ring-sky-400 dark:hover:ring-sky-200\">\n              <EditableText propKey=\"announcement\" className=\"group-hover:text-sky-500 dark:group-hover:text-sky-200\">{announcement}</EditableText>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <h1 className=\"TITLE-PRIMARY text-4xl font-semibold text-slate-900 dark:text-slate-50 sm:text-6xl\">\n              <EditableText propKey=\"title\">{title}</EditableText>\n            </h1>\n            <p className=\"DESC mt-6 text-lg text-slate-700 dark:text-slate-300\">\n              <EditableText propKey=\"description\">{description}</EditableText>\n            </p>\n            <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n              <EditableButton className=\"BTN-PRIMARY inline-flex items-center justify-center text-white bg-sky-500 font-medium border-0 py-2 xl:py-3 px-6 focus:outline-none hover:bg-sky-400 rounded-lg text-sm sm:text-base 2xl:text-lg transition-colors duration-500\">\n                <EditableText propKey=\"primaryButtonTextAttr\">{primaryButtonTextAttr}</EditableText>\n              </EditableButton>\n              <EditableButton className=\"BTN-SECONDARY inline-flex items-center justify-center text-slate-900 dark:text-white bg-white dark:bg-slate-800 font-medium border border-black/10 dark:border-white/10 py-2 xl:py-3 px-6 focus:outline-none hover:bg-slate-100 dark:hover:bg-slate-600 rounded-lg text-sm sm:text-base 2xl:text-lg transition-colors duration-500\">\n                <EditableText propKey=\"secondaryButtonTextAttr\">{secondaryButtonTextAttr}</EditableText>\n              </EditableButton>\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]\" aria-hidden=\"true\">\n          <div\n            className=\"relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-sky-500 to-sky-400 opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]\"\n            style={{ clipPath: 'polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)' }}\n          >\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "name": "Hero_15",
      "props": {
        "announcement": "欢迎来到Shoppers' Haven，开启您的购物新体验！",
        "title": "发现无限可能，享受无忧购物",
        "description": "在Shoppers' Haven，我们提供丰富的产品选择和真实的客户评价，让您的购物之旅更加安心和愉悦。",
        "primaryButtonTextAttr": "text=立即购物&link=home",
        "secondaryButtonTextAttr": "text=了解更多&link=product-features"
      },
      "id": "Q3T6pdLhc5FeLkq9I8EiT"
    },
    "jKXaSk6SXkN-GZvznWX7E": {
      "code": "function Feature_07({\n  features = [\n    {\n      icon: 'fa-solid fa-magnifying-glass',\n      title: 'Innovative Design Solutions',\n      description: 'Our team provides modern design solutions that elevate your brand and engage your audience.',\n    },\n    {\n      icon: 'fa-solid fa-lock',\n      title: 'Secure and Reliable',\n      description: 'We prioritize security and reliability to ensure your digital assets are protected.',\n    },\n    {\n      icon: 'fa-solid fa-headset',\n      title: 'Dedicated Support',\n      description: 'Our customer support team is available 24/7 to assist you with any inquiries.',\n    },\n  ],\n}) {\n  return (\n    <section className=\"py-10 bg-white dark:bg-slate-800 sm:py-16 lg:py-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 text-center gap-y-10 md:grid-cols-3 md:text-left\">\n          {features.map((feature, index) => (\n            <div key={index} className={`md:${index > 0 ? 'border-l border-black/10 dark:border-white/10' : ''} md:px-6 lg:px-12`}>\n              <AnimateInView type=\"rise\">\n                <EditableIcon propKey={`features_${index}_icon`} icon={feature.icon} iconLibrary=\"FontAwesome\" className=\"text-4xl text-slate-900 dark:text-white/80\" />\n                <h3 className=\"TITLE-PRIMARY mt-12 text-lg font-bold text-slate-900 dark:text-white/80\">\n                  <EditableText propKey={`features_${index}_title`}>{feature.title}</EditableText>\n                </h3>\n                <p className=\"DESC mt-5 text-base text-slate-700 dark:text-white/80\">\n                  <EditableText propKey={`features_${index}_description`}>{feature.description}</EditableText>\n                </p>\n              </AnimateInView>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "name": "Feature_07",
      "props": {
        "features": [
          {
            "icon": "fa-solid fa-cart-shopping",
            "title": "多样化的产品选择",
            "description": "从家居用品到电子产品，我们提供满足您所有需求的多样化选择。"
          },
          {
            "icon": "fa-solid fa-star",
            "title": "真实客户评价",
            "description": "阅读真实客户的购物体验，帮助您做出明智的购买决策。"
          },
          {
            "icon": "fa-solid fa-shield-alt",
            "title": "安全可靠的购物体验",
            "description": "我们致力于提供安全的支付环境和可靠的配送服务。"
          }
        ]
      },
      "id": "jKXaSk6SXkN-GZvznWX7E"
    },
    "RRE5FShLObA0Xh_gf18qi": {
      "code": "function Categories_02({\n  categories = [\n    {\n      name: 'Innovative Designs',\n      products: '2,345 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?innovative,design',\n      key: 'design',\n    },\n    {\n      name: 'Ergonomic Chairs',\n      products: '1,234 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?ergonomic,chairs',\n      key: 'chairs',\n    },\n    {\n      name: 'Modern Desks',\n      products: '789 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?modern,desks',\n      key: 'desks',\n    },\n    {\n      name: 'Stylish Lamps',\n      products: '567 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?stylish,lamps',\n      key: 'lamps',\n    },\n  ],\n  title = 'Explore Our Categories',\n  subtitle = 'Discover unique pieces to accent your workspace',\n  buttonTextAttr = 'text=Browse All Categories&link=/',\n  buttonIcon = 'fa-solid fa-arrow-right',\n}) {\n  return (\n    <div className=\"w-full  dark:bg-slate-800 py-14\">\n      <section className=\"py-10 px-4 mx-auto max-w-7xl \">\n        <div className=\"text-center\">\n          <h2 className=\"TITLE-PRIMARY text-4xl font-bold text-slate-900 dark:text-white\">\n            <EditableText propKey=\"title\">{title}</EditableText>\n          </h2>\n          <p className=\"TITLE-SECONDARY mt-6 text-base font-normal text-slate-700 dark:text-white/80\">\n            <EditableText propKey=\"subtitle\">{subtitle}</EditableText>\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-5 mt-8 w-full h-full text-center sm:grid-cols-2 lg:grid-cols-4 sm:gap-6 sm:mt-12\">\n          {categories.map((category, index) => (\n            <AnimateInView key={category.key} type=\"rise\">\n              <div className=\"relative w-full h-full group overflow-hidden rounded-lg\">\n                <div className=\"absolute w-full h-full inset-0 \">\n                  <EditableImg\n                    propKey={`categories_${index}_imageUrl`}\n                    className=\"IMAGE object-cover w-full h-full aspect-[4/3] rounded-lg bg-slate-100 dark:bg-slate-900\"\n                    src={`${category.imageUrl}`}\n                    alt={category.imageUrl}\n                  />\n                </div>\n\n                <div className=\"relative p-6\">\n                  <span className=\"inline-flex items-center justify-center px-3 py-1.5 text-sm font-bold text-gray-900 bg-white rounded opacity-100 group-hover:opacity-0\">\n                    <EditableText propKey={`categories_${index}_name`}>{category.name}</EditableText>\n                  </span>\n                </div>\n\n                <div className=\"absolute inset-0 flex items-center justify-center bg-black transition-all duration-300 opacity-0 group-hover:opacity-80\">\n                  <div className=\"flex flex-col items-center\">\n\n                    <span className=\"mt-1 text-lg font-bold text-white\">\n                      <EditableButton className=\"TEXT-LINK\">\n                        <EditableText propKey={`categories_${index}_name`}>{category.name}</EditableText>\n                      </EditableButton>\n                    </span>\n                    <span className=\"DESC mt-1.5 text-sm font-medium text-gray-200\">\n                      <EditableText propKey={`categories_${index}_products`}>{category.products}</EditableText>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </AnimateInView>\n          ))}\n        </div>\n\n        <AnimateInView>\n          <div className=\"mt-12 text-center\">\n            <EditableButton\n              className=\"BTN-PRIMARY inline-flex gap-1 group text-sky-400 items-center justify-center px-6 py-2 text-sm font-medium  dark:text-sky-300 border border-sky-400 dark:border-sky-300 rounded-lg  dark:bg-slate-800 transition-colors duration-500\"\n            >\n              <EditableText propKey=\"buttonTextAttr\">{buttonTextAttr}</EditableText>\n              <EditableIcon propKey=\"buttonIcon\" icon={buttonIcon} className=\"group-hover:translate-x-1 transition-all duration-300\" />\n            </EditableButton>\n          </div>\n        </AnimateInView>\n      </section>\n    </div>\n  );\n}\n",
      "name": "Categories_02",
      "props": {
        "categories": [
          {
            "name": "家居用品",
            "products": "2,345 件产品",
            "imageUrl": "https://cdn.wegic.ai/assets/onepage/ai/image/69acbd78-0bee-41f5-9076-38a354359b10.jpeg",
            "key": "home-goods"
          },
          {
            "name": "电子产品",
            "products": "1,234 件产品",
            "imageUrl": "https://cdn.wegic.ai/assets/onepage/ai/image/327eb609-f021-40b2-9022-9c2028346913.jpeg",
            "key": "electronics"
          },
          {
            "name": "时尚服饰",
            "products": "789 件产品",
            "imageUrl": "https://cdn.wegic.ai/assets/onepage/ai/image/313294b7-75bf-45bf-975d-2dd8360c3174.jpeg",
            "key": "fashion"
          },
          {
            "name": "运动用品",
            "products": "567 件产品",
            "imageUrl": "https://cdn.wegic.ai/assets/onepage/ai/image/b1046c66-cc5e-4dfe-ab1f-a5be1d09fbb1.jpeg",
            "key": "sports-gear"
          }
        ],
        "title": "探索我们的产品类别",
        "subtitle": "从日常必需品到奢华享受，我们的产品应有尽有。",
        "buttonTextAttr": "text=浏览所有类别&link=categories",
        "buttonIcon": "fa-solid fa-arrow-right"
      },
      "id": "RRE5FShLObA0Xh_gf18qi"
    },
    "p5D-5ONzbHr_uegESb61X": {
      "code": "function Testimonial_04({\n  imageUrl = `https://source.unsplash.com/1200x1200/?portrait`,\n  logo = `fa-solid fa-wand-magic-sparkles`,\n  logoName = `Design Studio`,\n  testimonial1 = `The design studio's work was impeccable, and their attention to detail was outstanding. Their creative vision brought our project to life.`,\n  testimonial2 = `Working with the studio was a breeze; they understood our needs and delivered exceptional designs that elevated our brand.`,\n  authorName = `Leslie Alexander, Product Designer at Crowny`,\n}) {\n  return (\n    <section className=\"bg-white dark:bg-slate-800 py-10\">\n      <div className=\"max-w-7xl mx-auto px-4 py-10 flex flex-col-reverse items-center gap-16 md:flex-row \">\n        <AnimateInView type=\"rise\">\n          <EditableImg propKey=\"imageUrl\" className=\"IMAGE rounded-lg bg-slate-100 w-full h-auto aspect-[4/3] md:aspect-[3/4] object-cover\" src={imageUrl} alt={imageUrl} />\n        </AnimateInView>\n\n        <AnimateInView type=\"rise\">\n          <div className=\"flex flex-col gap-12\">\n            <div className=\"flex items-center gap-4\">\n              <EditableIcon propKey={\"logo\"} icon={logo} iconLibrary={\"FontAwesome\"} className=\"text-slate-900 dark:text-white\"></EditableIcon>\n              <h2 className=\"TITLE-PRIMARY text-3xl font-semibold text-slate-900 dark:text-white\">\n                <EditableText propKey=\"logoName\">{logoName}</EditableText>\n              </h2>\n            </div>\n\n            <div className=\"flex flex-col gap-8\">\n              <p className=\"DESC text-xl font-medium text-slate-900 dark:text-white/90\">\n                <EditableText propKey=\"testimonial1\">{testimonial1}</EditableText>\n              </p>\n              <p className=\"DESC text-lg text-slate-700 dark:text-white/90\">\n                <EditableText propKey=\"testimonial2\">{testimonial2}</EditableText>\n              </p>\n              <p className=\"DESC text-base font-semibold text-slate-500 dark:text-white/50\">\n                <EditableText propKey=\"authorName\">{authorName}</EditableText>\n              </p>\n            </div>\n          </div>\n        </AnimateInView>\n      </div>\n    </section>\n  );\n}",
      "name": "Testimonial_04",
      "props": {
        "imageUrl": "https://cdn.wegic.ai/assets/onepage/ai/image/cbf8fd66-2460-44fa-9b28-4eb5c1969a92.jpeg",
        "logo": "fa-solid fa-comments",
        "logoName": "Shoppers' Haven",
        "testimonial1": "在Shoppers' Haven购物让我感受到无与伦比的便捷和安心，强烈推荐！",
        "testimonial2": "这里的产品种类繁多，服务也非常到位，我的购物体验非常愉快。",
        "authorName": "张伟，资深购物达人"
      },
      "id": "p5D-5ONzbHr_uegESb61X"
    },
    "R8UBcT_iXfQJhv8k2PM6i": {
      "code": "function Gallery_01({\n  title = \"Innovative Designs\",\n  description = \"Explore our unique and creative design gallery that showcases our expertise in bringing ideas to life.\",\n  images = [\n    { url: \"https://source.unsplash.com/700x800/?design,creative\", name: \"Creative Expansion\" },\n    { url: \"https://source.unsplash.com/700x800/?artwork,visualization\", name: \"Artistic Visualization\" },\n    { url: \"https://source.unsplash.com/700x800/?studio,concept\", name: \"Conceptual Studio\" },\n    { url: \"https://source.unsplash.com/700x800/?project,implementation\", name: \"Project Implementation\" },\n    { url: \"https://source.unsplash.com/700x800/?innovation,development\", name: \"Innovative Development\" },\n    { url: \"https://source.unsplash.com/700x800/?technology,startup\", name: \"Technology Startup\" },\n    { url: \"https://source.unsplash.com/700x800/?cybersecurity\", name: \"Cybersecurity Insights\" },\n    { url: \"https://source.unsplash.com/700x800/?virtual,reality\", name: \"Virtual Reality Experiences\" },\n    { url: \"https://source.unsplash.com/700x800/?sustainable,energy\", name: \"Sustainable Energy\" },\n    { url: \"https://source.unsplash.com/700x800/?artificial,intelligence\", name: \"Artificial Intelligence\" }\n  ]\n}) {\n  return (\n    <section className=\"py-10 bg-white dark:bg-slate-800 sm:py-10 lg:py-10\">\n      <AnimateInView type=\"rise\">\n        <div className=\"max-w-7xl mx-auto py-10 px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:flex lg:items-end lg:justify-between\">\n            <div className=\"max-w-md mx-auto text-center lg:text-left lg:mx-0\">\n              <h2 className=\"TITLE-PRIMARY text-4xl font-semibold text-slate-900 dark:text-white/90\">\n                <EditableText propKey={\"title\"}>{title}</EditableText>\n              </h2>\n              <p className=\"DESC mt-6 text-base font-medium text-slate-900 dark:text-white/80\">\n                <EditableText propKey={\"description\"}>{description}</EditableText>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex w-full gap-6 pb-2 mt-12 overflow-x-auto sm:mt-16 snap-x\">\n          {images.map((image, index) => (\n            <div key={index} className=\"relative overflow-hidden snap-start scroll-ml-6 shrink-0 first:pl-6 last:pr-6\">\n              <EditableImg propKey={`images_${index}_url`} className=\"IMAGE w-[18.75rem] h-[25rem] aspect-[3/4] object-cover rounded-lg bg-slate-100\" src={image.url} alt={image.name} />\n              <p className=\"TEXT-CONTENT mt-5 text-base font-bold text-slate-700 dark:text-white/80\">\n                <EditableText propKey={`images_${index}_name`}>{image.name}</EditableText>\n              </p>\n            </div>\n          ))}\n        </div>\n      </AnimateInView>\n    </section>\n  );\n}",
      "name": "Gallery_01",
      "props": {
        "title": "热销产品展示",
        "description": "浏览我们精选的热门商品，体验高品质的购物选择。",
        "images": [
          {
            "url": "https://cdn.wegic.ai/assets/onepage/ai/image/9690da2f-2e89-42dc-ac6d-fb3a5a7108d6.jpeg",
            "name": "潮流新品"
          },
          {
            "url": "https://cdn.wegic.ai/assets/onepage/ai/image/a2fcd2ef-ec6c-4012-9eae-d17516a83aff.jpeg",
            "name": "畅销商品"
          },
          {
            "url": "https://cdn.wegic.ai/assets/onepage/ai/image/40e2c630-ee6f-4312-8935-680fac423964.jpeg",
            "name": "独家系列"
          },
          {
            "url": "https://cdn.wegic.ai/assets/onepage/ai/image/142d0733-c9f6-4a70-b19f-726721c77759.jpeg",
            "name": "新品上架"
          }
        ]
      },
      "id": "R8UBcT_iXfQJhv8k2PM6i"
    },
    "W5uBqg3z9ZmPkEKB_XaAL": {
      "code": "function CallToAction_09({\n  title = `Enhance Your Creative Process`,\n  description = `Join our community and streamline your workflow with our cutting-edge tools. Elevate your projects to new heights today.`,\n  primaryButtonTextAttr = `text=Get Started&link=/`,\n  secondaryButtonTextAttr = `text=Discover More&link=/`,\n  secondaryButtonIcon = \" fa-solid fa-arrow-right \",\n}) {\n  return (\n    <div className=\"bg-white dark:bg-slate-800\">\n      <div className=\"px-6 py-16 sm:px-6 sm:py-20 lg:px-8\">\n        <div className=\"mx-auto max-w-2xl text-center\">\n          <h2 className=\"TITLE-PRIMARY text-3xl font-bold tracking-tight text-slate-900 dark:text-white/90 sm:text-4xl\">\n            <EditableText propKey=\"title\">{title}</EditableText>\n          </h2>\n          <p className=\"DESC mx-auto mt-6 max-w-xl text-lg leading-8 text-slate-700 dark:text-white/90\">\n            <EditableText propKey=\"description\">{description}</EditableText>\n          </p>\n          <div className=\"mt-10 flex items-center justify-center gap-x-4\">\n            <EditableButton className=\"BTN-PRIMARY flex items-center justify-center text-white bg-sky-500 font-medium border-0 py-2 xl:py-3 px-6 focus:outline-none hover:bg-sky-400 rounded-lg text-sm sm:text-base 2xl:text-lg transition-colors duration-500\">\n              <EditableText propKey=\"primaryButtonTextAttr\">{primaryButtonTextAttr}</EditableText>\n            </EditableButton>\n            <EditableButton className=\"BTN-SECONDARY flex group items-center  gap-1 text-slate-900 dark:text-white bg-white dark:bg-slate-800 font-medium border-black/10 dark:border-white/10 py-2 xl:py-3 px-6 focus:outline-none hover:bg-slate-100 dark:hover:bg-slate-600 rounded-lg text-sm sm:text-base 2xl:text-lg transition-colors duration-500\">\n              <EditableText propKey=\"secondaryButtonTextAttr\">{secondaryButtonTextAttr}</EditableText>\n              <EditableIcon propKey=\"secondaryButtonIcon\" icon={secondaryButtonIcon} iconLibrary=\"FontAwesome\" className=\"group-hover:translate-x-1 transition-all duration-300\" />\n            </EditableButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "name": "CallToAction_09",
      "props": {
        "title": "加入我们的购物大家庭",
        "description": "立即注册，享受专属优惠和个性化推荐，开启您的专属购物之旅。",
        "primaryButtonTextAttr": "text=注册会员&link=sign-up",
        "secondaryButtonTextAttr": "text=探索更多&link=home",
        "secondaryButtonIcon": "fa-solid fa-arrow-right"
      },
      "id": "W5uBqg3z9ZmPkEKB_XaAL"
    }
  },
  "children": [
    "Q3T6pdLhc5FeLkq9I8EiT",
    "jKXaSk6SXkN-GZvznWX7E",
    "RRE5FShLObA0Xh_gf18qi",
    "p5D-5ONzbHr_uegESb61X",
    "R8UBcT_iXfQJhv8k2PM6i",
    "W5uBqg3z9ZmPkEKB_XaAL"
  ],
  "extra": {
    "color": {
      "name": "Custom Colors",
      "colorHex": "#008080",
      "isCustom": true
    },
    "webTheme": "Intuitive,Efficient,creativity",
    "font": {
      "heading": "Oooh Baby",
      "body": "Audiowide",
      "isCustom": true
    }
  },
  "id": "R2d8gDgkFU9gDIWoluM0q",
  "version": "1.0.0",
  "navigation": {
    "code": "function Navigation_02({\n  logo = 'https://cdn.wegic.ai/assets/onepage/thread/icon/default.png',\n  navItems = [\n    'text=Home&link=/home',\n    'text=About&link=/about',\n    'text=Service&link=/service',\n    'text=Case&link=/case',\n    'text=Blog&link=/blog',\n    'text=Contact&link=/contact',\n    'text=Location&link=/location',\n    'text=Map&link=/map',\n  ],\n  primaryButton = {\n    icon: 'fa-solid fa-arrow-right',\n    textAttr: 'Contact us',\n    textColor: 'black',\n  },\n  secondaryButton,\n  fixedTop = true,\n  logoSize = 40,\n  showButton = true,\n  maxCount = 7,\n}) {\n  const NAV_GAP = React.useMemo(() => 64, []);\n  const LOGO_MAX_WIDTH = React.useMemo(() => 300, []);\n  const MOBILE_WIDTH = React.useMemo(() => 768, []);\n  const MIN_PAGE_WIDTH = React.useMemo(() => 300, []);\n  const viewportId = React.useMemo(() => window?.siteEngine?.scrollContainerId || 'preview-viewport', []);\n  const [viewportHeight, setViewportHeight] = React.useState(0);\n  const [mobileMode, setMobileMode] = React.useState(false);\n  const moreButtonRef = React.useRef(null);\n  const [moreListVisible, setMoreListVisible] = React.useState(false);\n  const mobileListRef = React.useRef(null);\n  const [mobileListVisible, setMobileListVisible] = React.useState(false);\n  const [mobileEntryVisible, setMobileEntryVisible] = React.useState(false);\n  const buttonVisible = showButton && (secondaryButton || primaryButton);\n  const layoutObject = React.useMemo(() => {\n    const layout = {\n      logoSize: 0,\n      navHeight: 0,\n      buttonHeight: 0,\n      buttonPX: 0,\n      fontSize: 0,\n      dropDownHeight: 0,\n      dropDownPaddingLeft: 0,\n      dropDownPaddingRight: 0,\n      mobileNavHeight: 56,\n      mobileNavItemHeight: 56,\n      mobileFontSize: 14,\n      mobileIconSize: 20,\n    };\n\n    if (logoSize < 48) {\n      layout.fontSize = 14;\n      layout.dropDownHeight = 48;\n      layout.dropDownPaddingLeft = 12;\n      layout.dropDownPaddingRight = 48;\n    } else if (logoSize >= 48 && logoSize < 64) {\n      layout.fontSize = 15;\n      layout.dropDownHeight = 64;\n      layout.dropDownPaddingLeft = 20;\n      layout.dropDownPaddingRight = 80;\n    } else if (logoSize >= 64) {\n      layout.fontSize = 16;\n      layout.dropDownHeight = 64;\n      layout.dropDownPaddingLeft = 20;\n      layout.dropDownPaddingRight = 80;\n    }\n\n    if (mobileMode) {\n      if (logoSize < 56) {\n        layout.logoSize = 32;\n        layout.mobileNavHeight = 56;\n        layout.mobileFontSize = 14;\n        layout.mobileIconSize = 20;\n      } else {\n        layout.logoSize = 48;\n        layout.mobileNavHeight = 72;\n        layout.mobileFontSize = 16;\n        layout.mobileIconSize = 24;\n      }\n    } else {\n      layout.logoSize = logoSize;\n      if (logoSize < 56) {\n        layout.navHeight = logoSize + 24;\n      } else if (logoSize >= 56 && logoSize < 64) {\n        layout.navHeight = logoSize + 40;\n      } else {\n        layout.navHeight = 120;\n      }\n    }\n\n    /** button */\n    if (logoSize < 48) {\n      layout.buttonHeight = 40;\n      layout.buttonPX = 20;\n    } else if (logoSize >= 48 && logoSize < 56) {\n      layout.buttonHeight = 48;\n      layout.buttonPX = 20;\n    } else {\n      layout.buttonHeight = 56;\n      layout.buttonPX = 28;\n    }\n\n    return layout;\n  }, [logoSize, mobileMode]);\n  const [isOverWidthLogo, setIsOverWidthLogo] = React.useState(false);\n  const logoRectRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const logoRef = React.useRef(null);\n  const buttonContainerRef = React.useRef(null);\n  const [pageWidth, setPageWidth] = React.useState(0);\n  const [minPageWidth, setMinPageWidth] = React.useState(MIN_PAGE_WIDTH);\n  const [skeletonMinWidth, setSkeletonMinWidth] = React.useState(MIN_PAGE_WIDTH);\n  const [logoWidth, setLogoWidth] = React.useState(0);\n  const [buttonContainerWidth, setButtonContainerWidth] = React.useState(0);\n  const [minLimit, setMinLimit] = React.useState(false);\n  const [leftLimit, setLeftLimit] = React.useState(false);\n  const [rightLimit, setRightLimit] = React.useState(false);\n  const center = React.useMemo(() => !leftLimit && !rightLimit, [leftLimit, rightLimit]);\n\n  const handlePageWidthUpdate = React.useCallback(() => {\n    if (mobileMode || !logoWidth) {\n      return;\n    }\n    const contentWidth = contentRef.current?.clientWidth || 0;\n    const leftRestWidth = contentWidth / 2 - logoWidth - NAV_GAP;\n    const rightRestWidth = contentWidth / 2 - buttonContainerWidth - NAV_GAP;\n    const pageItemWidth = Math.max(Math.min(leftRestWidth, rightRestWidth) * 2, minPageWidth);\n    const newMinLimit = logoWidth + NAV_GAP + minPageWidth + NAV_GAP + buttonContainerWidth > contentWidth;\n\n    const newSkeletonMinWidth = newMinLimit ? minPageWidth : Math.max(contentWidth - logoWidth - buttonContainerWidth - NAV_GAP * 2, minPageWidth);\n\n    const leftLimit = contentWidth / 2 - logoWidth - NAV_GAP < minPageWidth / 2;\n    const rightLimit = contentWidth / 2 - buttonContainerWidth - NAV_GAP < minPageWidth / 2;\n    setLeftLimit(leftLimit);\n    setRightLimit(rightLimit);\n    setMinLimit(newMinLimit);\n    setPageWidth(pageItemWidth);\n    setSkeletonMinWidth(newSkeletonMinWidth);\n  }, [minPageWidth, mobileMode, logoWidth, buttonContainerWidth]);\n\n  React.useEffect(() => {\n    handlePageWidthUpdate();\n  }, [logoSize, isOverWidthLogo, navItems, showButton, primaryButton, secondaryButton, handlePageWidthUpdate]);\n\n  React.useEffect(() => {\n    setMinPageWidth(MIN_PAGE_WIDTH);\n  }, [navItems]);\n\n  /** navigation ResizeObserver start */\n  const handleViewportWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      setViewportHeight(rect.height);\n      if (rect.width > MOBILE_WIDTH) {\n        mobileMode && setMobileMode(false);\n        handlePageWidthUpdate();\n      } else {\n        !mobileMode && setMobileMode(true);\n      }\n    }, 32),\n    [mobileMode, handlePageWidthUpdate]\n  );\n\n  React.useEffect(() => {\n    const scrollDom = document.getElementById(viewportId);\n    const observer = new ResizeObserver(handleViewportWidthChange);\n    observer.observe(scrollDom);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [viewportId, handleViewportWidthChange]);\n  /** navigation ResizeObserver end */\n\n  /** logo ResizeObserver start */\n  const handleLogoWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      rect.width && setLogoWidth(rect.width);\n    }, 32),\n    []\n  );\n\n  React.useEffect(() => {\n    if (!logoRef.current || mobileMode) {\n      return;\n    }\n    const observer = new ResizeObserver(handleLogoWidthChange);\n    observer.observe(logoRef.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [mobileMode, handleLogoWidthChange]);\n  /** logo ResizeObserver end */\n\n  /** button ResizeObserver start */\n  const handleButtonWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      rect.width && setButtonContainerWidth(rect.width);\n    }, 32),\n    []\n  );\n\n  React.useEffect(() => {\n    if (!buttonContainerRef.current || mobileMode || minLimit || !buttonVisible) {\n      return;\n    }\n    const observer = new ResizeObserver(handleButtonWidthChange);\n    observer.observe(buttonContainerRef.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [mobileMode, handleButtonWidthChange, minLimit, buttonVisible]);\n  /** button ResizeObserver end */\n\n  React.useEffect(() => {\n    if (!mobileMode) {\n      setMobileListVisible(false);\n    } else {\n      setMoreListVisible(false);\n    }\n  }, [mobileMode]);\n\n  const handleCloseMoreList = (e) => {\n    if (moreButtonRef.current?.contains(e.target)) {\n      return;\n    }\n    if (moreListVisible) {\n      setMoreListVisible(false);\n    }\n  };\n\n  React.useEffect(() => {\n    moreListVisible && window.addEventListener('click', handleCloseMoreList);\n    return () => {\n      window.removeEventListener('click', handleCloseMoreList);\n    };\n  }, [moreListVisible]);\n\n  React.useEffect(() => {\n    const handleScroll = throttle((e) => {\n      if (!e.target) {\n        return;\n      }\n\n      if (mobileListVisible) {\n        setMobileListVisible(false);\n      }\n    }, 32);\n\n    let scrollContainer = window?.document.getElementById(viewportId);\n    scrollContainer?.addEventListener('scroll', handleScroll);\n    return () => {\n      scrollContainer?.removeEventListener('scroll', handleScroll);\n    };\n  }, [mobileListVisible]);\n\n  React.useEffect(() => {\n    let count = navItems.length;\n    if (showButton) {\n      if (primaryButton) count++;\n      if (secondaryButton) count++;\n    }\n\n    setMobileEntryVisible(count > 1);\n    count <= 1 && setMobileListVisible(false);\n  }, [primaryButton, secondaryButton, navItems, showButton]);\n\n  /** update logo mode start */\n  const handleImageAspectRatioUpdate = () => {\n    if (!logoRectRef.current) {\n      return;\n    }\n    const currentAspectRatio = LOGO_MAX_WIDTH / layoutObject.logoSize;\n    const { naturalWidth, naturalHeight } = logoRectRef.current;\n    const aspectRatio = naturalWidth / naturalHeight;\n    setIsOverWidthLogo(aspectRatio > currentAspectRatio);\n  };\n\n  React.useEffect(() => {\n    if (logoRectRef.current?.logo === logo) {\n      handleImageAspectRatioUpdate();\n      return;\n    }\n\n    const image = new Image();\n    image.onload = () => {\n      logoRectRef.current = {\n        logo,\n        naturalWidth: image.naturalWidth,\n        naturalHeight: image.naturalHeight,\n      };\n      handleImageAspectRatioUpdate();\n    };\n\n    image.src = logo;\n  }, [logo, layoutObject]);\n  /** update logo mode end */\n\n  const renderNavItem = (item, index) => {\n    return (\n      <EditableButton\n        key={item}\n        style={{ fontSize: layoutObject.fontSize }}\n        className={`${\n          index ? 'ml-8' : ''\n        } py-3 text-black whitespace-nowrap cursor-pointer hover:text-black/60 hover:transition-all duration-100 dark:text-white dark:hover:text-white/60`}\n      >\n        <EditableText propKey={`navItems_${index}`}>{item}</EditableText>\n      </EditableButton>\n    );\n  };\n\n  const renderMoreListItems = (items, startIndex = 0) => {\n    return items.map((item, index) => (\n      <EditableButton\n        key={item}\n        style={{\n          height: layoutObject.dropDownHeight,\n          paddingLeft: layoutObject.dropDownPaddingLeft,\n          paddingRight: layoutObject.dropDownPaddingRight,\n          fontSize: layoutObject.fontSize,\n        }}\n        className=\"flex-shrink-0 w-full h-full text-black whitespace-nowrap cursor-pointer text-left hover:text-black/60 hover:transition-all duration-100 dark:text-white dark:hover:text-white/60\"\n        onClick={() => setMoreListVisible(false)}\n      >\n        <EditableText propKey={`navItems_${startIndex + index}`}>{item}</EditableText>\n      </EditableButton>\n    ));\n  };\n\n  const renderRest = (omittedItems) => (\n    <div className=\"relative ml-8 \">\n      <motion.button\n        ref={moreButtonRef}\n        className=\"w-10 h-10 flex items-center justify-center flex-shrink-0\"\n        onClick={() => setMoreListVisible(!moreListVisible)}\n        whileTap={{ scale: 0.9 }}\n        style={{ fontSize: layoutObject.fontSize }}\n      >\n        <svg\n          style={{ transform: 'translateY(2px)' }}\n          className=\"hover:transition-all hover:scale-110 text-black dark:text-white\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"3\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n          <circle cx=\"10\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n          <circle cx=\"17\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n        </svg>\n      </motion.button>\n      {moreListVisible && (\n        <AnimatePresence>\n          <motion.div\n            style={{\n              boxShadow: '0px 2px 4px 0px rgba(0, 0, 0, 0.06)',\n              fontSize: layoutObject.fontSize,\n            }}\n            className={`max-h-96 overflow-auto overscroll-contain absolute z-40 top-full right-0 flex flex-col p-1 rounded-md bg-white border border-[#0000000a] dark:border-white/10 dark:bg-black`}\n            animate={{\n              scale: [0, 1],\n              opacity: [0, 1],\n            }}\n          >\n            {renderMoreListItems(omittedItems, navItems.length - omittedItems.length)}\n          </motion.div>\n        </AnimatePresence>\n      )}\n    </div>\n  );\n\n  const handleOverflowUpdate = (widths, overflow) => {\n    if (mobileMode) {\n      return;\n    }\n\n    if (widths.length >= 2) {\n      const firstItemWidth = widths[0];\n      const restItemWidth = overflow ? widths[widths.length - 1] : 72;\n      setMinPageWidth(firstItemWidth + restItemWidth);\n    } else if (navItems.length === 1 && widths.length && widths[0]) {\n      setMinPageWidth(widths[0]);\n    } else setMinPageWidth(MIN_PAGE_WIDTH);\n  };\n\n  const renderNavList = (items) => {\n    return (\n      <div\n        className={`${buttonVisible ? 'absolute' : 'flex flex-1 flex-shrink'} ${\n          center ? (buttonVisible ? 'left-1/2 -translate-x-1/2' : '') : leftLimit || minLimit ? `left-[${logoWidth + NAV_GAP}px]` : `right-[${buttonContainerWidth + NAV_GAP}px]`\n        } ${moreListVisible ? '' : 'overflow-hidden'}`}\n        style={{ width: buttonVisible ? pageWidth : undefined, minWidth: buttonVisible ? minPageWidth : undefined }}\n      >\n        <Overflow\n          data={items}\n          style={{ height: layoutObject.logoSize }}\n          className={`flex items-center ${buttonVisible ? 'justify-center' : 'justify-end'} flex-shrink flex-1`}\n          renderItem={renderNavItem}\n          maxCount={maxCount}\n          minCount={1}\n          renderRest={renderRest}\n          onUpdate={handleOverflowUpdate}\n        />\n      </div>\n    );\n  };\n\n  const handleMobileButtonClick = (e) => {\n    mobileListVisible && setMobileListVisible(false);\n  };\n\n  const renderContent = () => {\n    if (mobileMode) {\n      return (\n        <div className=\"relative flex flex-col w-full h-full\">\n          <div\n            className=\"flex flex-shrink-0 z-40 w-full pl-4 justify-between items-center overflow-hidden md:hidden\"\n            style={{\n              height: layoutObject.mobileNavHeight,\n              fontSize: layoutObject.mobileFontSize,\n            }}\n          >\n            <EditableImg\n              propKey=\"logo\"\n              style={{\n                height: isOverWidthLogo ? undefined : layoutObject.logoSize,\n              }}\n              className={`${isOverWidthLogo ? `!w-[${LOGO_MAX_WIDTH}px]` : `!w-auto`} !max-w-[${LOGO_MAX_WIDTH}px] object-cover flex-shrink min-w-0`}\n              src={logo}\n              alt=\"logo\"\n            />\n            <motion.button\n              className={`${!mobileEntryVisible ? 'hidden' : ''} flex justify-center items-center text-black flex-shrink-0`}\n              onClick={() => setMobileListVisible(!mobileListVisible)}\n              whileTap={{ scale: 0.9 }}\n              style={{\n                width: layoutObject.mobileNavHeight,\n                height: layoutObject.mobileNavHeight,\n                fontSize: layoutObject.mobileFontSize,\n              }}\n            >\n              {mobileListVisible ? (\n                <svg width={layoutObject.mobileIconSize} height={layoutObject.mobileIconSize} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M4 16L16 4.25115\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M4 4L16 15.7489\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                </svg>\n              ) : (\n                <svg width={layoutObject.mobileIconSize} height={layoutObject.mobileIconSize} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M3 5L16.375 5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M3 10H16.375\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M3 15H16.375\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                </svg>\n              )}\n            </motion.button>\n          </div>\n          {mobileListVisible && (\n            <div\n              ref={mobileListRef}\n              className=\"absolute z-50 top-full w-full flex flex-grow flex-shrink flex-col bg-[#ffffffe0] dark:bg-black/80 backdrop-blur-xl rounded-b-3xl shadow-xl overflow-hidden md:hidden\"\n              style={{ fontSize: layoutObject.mobileFontSize, height: viewportHeight - layoutObject.mobileNavHeight - 24 }}\n            >\n              <motion.nav\n                className={`w-full h-full flex flex-col rounded-b-3xl`}\n                animate={{\n                  y: [20, 0],\n                  opacity: [0, 1],\n                }}\n                transition={{\n                  duration: 0.4,\n                }}\n              >\n                <div className=\"flex flex-col flex-grow flex-shrink overflow-auto overscroll-contain\">\n                  {navItems.map((item, navIndex) => (\n                    <EditableButton\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        maxHeight: layoutObject.mobileNavItemHeight,\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      key={item}\n                      onClick={handleMobileButtonClick}\n                      className=\"w-full flex-grow-0 flex-shrink-0 text-black whitespace-nowrap cursor-pointer hover:text-black/60 hover:transition-all duration-100 dark:text-white dark:hover:text-white/60 select-none\"\n                    >\n                      <EditableText propKey={`navItems_${navIndex}`}>{item}</EditableText>\n                    </EditableButton>\n                  ))}\n                </div>\n                <div className={`${showButton ? '' : 'hidden'} w-full h-fit flex-shrink-0 flex items-center justify-between overflow-hidden gap-5 px-5 py-[10px]`}>\n                  {secondaryButton && (\n                    <EditableButton\n                      onClick={handleMobileButtonClick}\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      className={`BTN-SECONDARY overflow-hidden px-10 flex-1 group/nav whitespace-nowrap font-normal text-black flex justify-center gap-2 items-center rounded-full hover:bg-black/5 hover:transition-all hover:duration-300`}\n                    >\n                      <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"secondaryButton_textAttr\">\n                        {secondaryButton.textAttr}\n                      </EditableText>\n                      <EditableIcon\n                        propKey=\"secondaryButton_icon\"\n                        icon={secondaryButton.icon}\n                        iconLibrary=\"FontAwesome\"\n                        className=\" text-black group-hover/nav:translate-x-1 transition-all\"\n                      />\n                    </EditableButton>\n                  )}\n                  {primaryButton && (\n                    <EditableButton\n                      onClick={handleMobileButtonClick}\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        color: primaryButton.textColor ? primaryButton.textColor : 'black',\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      className={`BTN-PRIMARY overflow-hidden px-10 flex-1 group/nav whitespace-nowrap font-normal flex justify-center gap-2 items-center rounded-full bg-blue-500 hover:bg-blue-600 hover:transition-all hover:duration-300`}\n                    >\n                      <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"primaryButton_textAttr\">\n                        {primaryButton.textAttr}\n                      </EditableText>\n                      <EditableIcon\n                        propKey=\"primaryButton_icon\"\n                        icon={primaryButton.icon}\n                        iconLibrary=\"FontAwesome\"\n                        style={{\n                          color: primaryButton.textColor ? primaryButton.textColor : 'black',\n                        }}\n                        className=\" group-hover/nav:translate-x-1 transition-all\"\n                      />\n                    </EditableButton>\n                  )}\n                </div>\n              </motion.nav>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          height: layoutObject.navHeight,\n        }}\n        className=\"relative w-full hidden gap-16 md:flex justify-between items-center\"\n      >\n        <div className={`h-full flex flex-shrink-0 items-center justify-start`} ref={logoRef} style={{ maxWidth: LOGO_MAX_WIDTH }}>\n          <EditableImg\n            propKey=\"logo\"\n            style={{\n              height: isOverWidthLogo ? undefined : layoutObject.logoSize,\n            }}\n            className={`${isOverWidthLogo ? `!w-[${LOGO_MAX_WIDTH}px]` : `!w-auto`} !max-w-[${LOGO_MAX_WIDTH}px] object-cover flex-shrink-0 min-w-0`}\n            src={logo}\n            alt=\"logo\"\n          />\n        </div>\n\n        {renderNavList(navItems)}\n        {buttonVisible && <div className=\"flex flex-shrink flex-1\" style={{ minWidth: leftLimit || rightLimit ? skeletonMinWidth : undefined }}></div>}\n\n        {buttonVisible && (\n          <div className={`w-fit h-full flex items-center justify-end overflow-hidden gap-3 ${minLimit ? 'flex-shrink' : 'flex-shrink-0'}`} ref={buttonContainerRef}>\n            {secondaryButton && (\n              <EditableButton\n                style={{\n                  height: layoutObject.buttonHeight,\n                  fontSize: layoutObject.fontSize,\n                }}\n                className={`BTN-SECONDARY max-w-[180px] w-fit px-5 group/nav whitespace-nowrap font-normal text-black flex gap-2 items-center rounded-full hover:bg-black/5 hover:transition-all hover:duration-300`}\n              >\n                <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"secondaryButton_textAttr\">\n                  {secondaryButton.textAttr}\n                </EditableText>\n                <EditableIcon\n                  propKey=\"secondaryButton_icon\"\n                  icon={secondaryButton.icon}\n                  iconLibrary=\"FontAwesome\"\n                  className=\"text-sm text-black group-hover/nav:translate-x-1 transition-all\"\n                />\n              </EditableButton>\n            )}\n            {primaryButton && (\n              <EditableButton\n                style={{\n                  height: layoutObject.buttonHeight,\n                  color: primaryButton.textColor ? primaryButton.textColor : 'black',\n                  padding: `0 ${layoutObject.buttonPX}px`,\n                  fontSize: layoutObject.fontSize,\n                }}\n                className={`BTN-PRIMARY max-w-[180px] w-fit  group/nav  whitespace-nowrap font-normal flex gap-2 items-center rounded-full bg-blue-500 hover:bg-blue-600 hover:transition-all hover:duration-300`}\n              >\n                <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"primaryButton_textAttr\">\n                  {primaryButton.textAttr}\n                </EditableText>\n                <EditableIcon\n                  propKey=\"primaryButton_icon\"\n                  icon={primaryButton.icon}\n                  iconLibrary=\"FontAwesome\"\n                  style={{\n                    color: primaryButton.textColor ? primaryButton.textColor : 'black',\n                  }}\n                  className=\"text-sm group-hover/nav:translate-x-1 transition-all\"\n                />\n              </EditableButton>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <section\n      style={{\n        transitionTimingFunction: 'cubic-bezier(.165,.84,.44,1)',\n        transitionDuration: '300ms',\n        fontSize: layoutObject.fontSize,\n      }}\n      className={`${fixedTop ? 'sticky' : 'relative'} z-40 top-0 w-full bg-[#ffffffe0] dark:bg-black/80 backdrop-blur-sm md:px-8`}\n    >\n      <div className=\"max-w-7xl mx-auto w-full h-full\" ref={contentRef}>\n        {renderContent()}\n      </div>\n    </section>\n  );\n}",
    "name": "Navigation_02",
    "props": {
      "fixedTop": false,
      "logo": "https://cdn.wegic.ai/assets/onepage/thread/icon/1715742642990.png",
      "logoSize": 40,
      "siteTitle": "StudyUPDay",
      "navItems": [
        "text=主页&link=home",
        "text=产品特点&link=product-features",
        "text=客户评论&link=customer-reviews"
      ],
      "showButton": true,
      "primaryButton": {
        "icon": "fa-solid fa-arrow-right",
        "textAttr": "Contact us",
        "textColor": "#ffffff"
      },
      "version": 3
    },
    "id": "fcVlpCnkamvwr3APULzyR"
  },
  "footer": {
    "code": "function Footer_02({\n  navigationItems = [\n    { titleAttr: 'text=About Us&link=/' },\n    { titleAttr: 'text=Our Services&link=/' },\n    { titleAttr: 'text=Projects&link=/' },\n    { titleAttr: 'text=Careers&link=/' },\n  ],\n  socialMediaItems = [\n    { icon: 'fa-brands fa-twitter', href: '#' },\n    { icon: 'fa-brands fa-facebook', href: '#' },\n    { icon: 'fa-brands fa-instagram', href: '#' },\n    { icon: 'fa-brands fa-github', href: '#' },\n  ],\n  copyrightText = '© Design Studio 2023, All Rights Reserved',\n}) {\n  return (\n    <section className=\"bg-slate-50 dark:bg-slate-800 px-6 py-20 md:px-8\">\n      <AnimateInView type=\"rise\">\n        <div className=\" mx-auto max-w-7xl flex flex-col gap-20\">\n          <div className=\"flex flex-col items-center gap-8 md:justify-between md:flex-row\">\n            <ul className=\"flex items-center gap-8\">\n              {navigationItems.map((item, index) => (\n                <li key={item.title} href={item.href}>\n                  <EditableButton\n                    className=\"TEXT-LINK font-semibold text-slate-900 dark:text-slate-50  hover:text-sky-400  dark:hover:text-sky-400 focus:text-sky-500 dark:focus:text-sky-500\"\n                  >\n                    <EditableText propKey={`navigationItems_${index}_titleAttr`}>{item.titleAttr}</EditableText>\n                  </EditableButton>\n                </li>\n              ))}\n            </ul>\n            <ul className=\"flex items-center gap-8 \">\n              {socialMediaItems.map((item, index) => (\n                <li key={item.icon} href={item.href}>\n                  <EditableButton\n                    className=\"TEXT-LINK text-slate-900 dark:text-slate-50 hover:text-sky-400 dark:hover:text-sky-400  dark:focus:text-slate-500\"\n                  >\n                    <EditableIcon propKey={`socialMediaItems_${index}_icon`} icon={item.icon} iconLibrary=\"FontAwesome\" className=\"text-lg\" />\n                  </EditableButton>\n                </li>\n              ))}\n            </ul>\n\n          </div>\n\n          <p className=\"w-full text-sm text-center text-slate-600 lg:mt-0 dark:text-slate-400\">\n            <EditableText propKey=\"copyrightText\">{copyrightText}</EditableText>\n          </p>\n\n        </div>\n      </AnimateInView>\n    </section>\n  );\n}",
    "name": "Footer_02",
    "props": {
      "navigationItems": [
        {
          "titleAttr": "text=Homepage&link=home"
        },
        {
          "titleAttr": "text=Courses&link=courses"
        },
        {
          "titleAttr": "text=About Us&link=about-us"
        },
        {
          "titleAttr": "text=Contact&link=contact"
        }
      ],
      "socialMediaItems": [
        {
          "icon": "fa-brands fa-twitter",
          "href": "https://twitter.com/StudyUPDay"
        },
        {
          "icon": "fa-brands fa-facebook",
          "href": "https://facebook.com/StudyUPDay"
        },
        {
          "icon": "fa-brands fa-instagram",
          "href": "https://instagram.com/StudyUPDay"
        },
        {
          "icon": "fa-brands fa-github",
          "href": "https://github.com/StudyUPDay"
        }
      ],
      "copyrightText": "© StudyUPDay 2023, All Rights Reserved"
    },
    "id": "vuS9eRGcWuaBrekXPNWNl"
  }
}