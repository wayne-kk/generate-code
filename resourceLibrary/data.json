{
  "blocksMap": {
    "wxZS06ARxR94bIqLH0IyG": {
      "code": "function Hero_19({\n  title = 'Innovative Design Solutions',\n  description = 'Exploring creativity, delivering functional and aesthetic design to enhance your digital presence.',\n  backgroundImageUrl = 'https://source.unsplash.com/random/2830x1590/?creative,studio',\n  announcementText = 'Check our latest portfolio updates.',\n  announcementLinkAttr = 'text=Read more →&link=/',\n  buttonTextAttr = 'text=Discover Our Work&link=/',\n  learnMoreTextAttr = 'text=Explore Services&link=/',\n  buttonArrow = 'fa-solid fa-arrow-right',\n}) {\n  return (\n    <div className=\" bg-slate-900 dark:bg-slate-950\">\n      <div className=\"relative isolate overflow-hidden\">\n        <EditableImg\n          propKey=\"backgroundImageUrl\"\n          className=\"IMAGE absolute opacity-40 dark:opacity-30 inset-0 -z-10 h-full w-full object-cover\"\n          src={backgroundImageUrl}\n          alt=\"background\"\n        />\n        <div\n          className=\"absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80\"\n          aria-hidden=\"true\"\n        >\n        </div>\n        <div className=\"mx-auto max-w-2xl py-32 sm:py-48 lg:py-56\">\n          <div className=\"hidden sm:mb-8 sm:flex sm:justify-center\">\n            <div className=\"relative rounded-full flex gap-1 px-3 py-1 text-sm leading-6 text-white/60 hover:text-white/80 ring-1 ring-white/40 hover:ring-white/60 hover:transition-all duration-300\">\n              <EditableText propKey=\"announcementText\" className=\"DESC\">{announcementText}</EditableText>\n              <EditableButton className=\"TEXT-LINK font-semibold text-white\">\n                <EditableText propKey=\"announcementLinkAttr\">{announcementLinkAttr}</EditableText>\n              </EditableButton>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <h1 className=\"TITLE-PRIMARY text-4xl font-bold tracking-tight text-white sm:text-6xl\">\n              <EditableText propKey=\"title\">{title}</EditableText>\n            </h1>\n            <p className=\"DESC mt-6 text-lg leading-8 text-gray-300\">\n              <EditableText propKey=\"description\">{description}</EditableText>\n            </p>\n            <div className=\"mt-10 flex flex-col items-center justify-center gap-6 md:flex-row\">\n              <EditableButton\n                className=\"BTN-PRIMARY inline-flex items-center justify-center text-white bg-sky-500 font-medium border-0 py-2 xl:py-3 px-6 focus:outline-none hover:bg-sky-400 rounded-lg text-sm sm:text-base 2xl:text-lg transition-colors duration-500\"\n              >\n                <EditableText propKey=\"buttonTextAttr\">{buttonTextAttr}</EditableText>\n              </EditableButton>\n              <EditableButton className=\"TEXT-LINK text-sm group flex items-center gap-1 font-semibold leading-6 text-white\">\n                <EditableText propKey=\"learnMoreTextAttr\">{learnMoreTextAttr}</EditableText>\n                <EditableIcon propKey={\"buttonArrow\"} icon={buttonArrow} iconLibrary=\"FontAwesome\" className=\"group-hover:translate-x-1 transition-all duration-300\" />\n              </EditableButton>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]\"\n          aria-hidden=\"true\"\n        >\n        </div>\n      </div>\n    </div>\n  );\n}",
      "name": "Hero_19",
      "props": {
        "title": "AIGCODE：引领智能生成代码的未来",
        "description": "专注于智能化代码生成解决方案，助力企业实现技术与效率的双重升级。",
        "backgroundImageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/e970bbc2-3255-479f-b80e-f2a09a273cea.jpeg?oldPrompt=现代简约的办公环境，高科技设备，专业团队协作，创新氛围，企业标志，清晰的企业价值观展示，中性色调，无干扰元素，负面词：无杂乱元素，无过于鲜艳的色彩",
        "announcementText": "探索最新的技术动态。",
        "announcementLinkAttr": "text=了解更多&link=",
        "buttonTextAttr": "text=立即体验&link=",
        "learnMoreTextAttr": "text=了解我们的服务&link=",
        "buttonArrow": "fa-solid fa-arrow-right"
      },
      "id": "wxZS06ARxR94bIqLH0IyG"
    },
    "1nRuVy7XVbBJox2MHei1x": {
      "code": "function Feature_08({\n  title = 'Elevating Design Studio Experiences',\n  description = 'We craft user-centric designs that empower your brand and engage your audience.',\n  features = [\n    {\n      icon: 'fa-solid fa-headset',\n      title: 'Dedicated Support',\n      description: 'Our team provides continuous support to ensure your success at every step.',\n    },\n    {\n      icon: 'fa-solid fa-chart-line',\n      title: 'Sales Boost',\n      description: 'Enhance your sales strategies with our innovative design solutions.',\n    },\n    {\n      icon: 'fa-solid fa-user-check',\n      title: 'Smooth Onboarding',\n      description: 'We ensure a seamless onboarding process for a great first impression.',\n    },\n    {\n      icon: 'fa-solid fa-box-open',\n      title: 'Product Excellence',\n      description: 'Our designs focus on delivering quality and excellence in your product.',\n    },\n    {\n      icon: 'fa-solid fa-heart-circle-check',\n      title: 'Quality Assurance',\n      description: 'Maintain high standards with our thorough quality assurance practices.',\n    },\n    {\n      icon: 'fa-solid fa-id-badge',\n      title: 'Proven Results',\n      description: 'Our track record of delivering results speaks for itself.',\n    },\n  ],\n}) {\n  return (\n    <section className=\"py-12 bg-white sm:py-16 lg:py-20 dark:bg-slate-800\">\n      <div className=\"px-4 mx-auto max-w-7xl sm:px-6 lg:px-8\">\n        <div className=\"text-center\">\n          <h2 className=\"TITLE-PRIMARY text-4xl font-semibold text-slate-900 sm:text-4xl xl:text-5xl font-pj dark:text-white/90\">\n            <EditableText propKey=\"title\">{title}</EditableText>\n          </h2>\n          <p className=\"DESC mt-4 text-base leading-7 text-slate-600 sm:mt-8 font-pj dark:text-white/90\">\n            <EditableText propKey=\"description\">{description}</EditableText>\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 mt-10 text-center sm:mt-16 sm:grid-cols-2 sm:gap-x-12 gap-y-12 md:grid-cols-3 md:gap-0 xl:mt-24\">\n          {features.map((feature, index) => (\n            <AnimateInView key={index} type=\"rise\">\n              <div className={`md:p-8 lg:p-14 h-full ${index % 3 !== 0 ? 'md:border-l border-black/10 dark:border-white/10' : ''} ${index >= 3 ? 'md:border-t border-black/10 dark:border-white/10' : ''}`}>\n                <EditableIcon propKey={`features_${index}_icon`} icon={feature.icon} iconLibrary=\"FontAwesome\" className=\"mx-auto text-sky-500 text-3xl\"/>\n                <h3 className=\"TITLE-SECONDARY mt-12 text-xl font-bold text-slate-900 dark:text-white/90\">\n                  <EditableText propKey={`features_${index}_title`}>{feature.title}</EditableText>\n                </h3>\n                <p className=\"TEXT-CONTENT mt-5 text-base text-slate-600 dark:text-white/90\">\n                  <EditableText propKey={`features_${index}_description`}>{feature.description}</EditableText>\n                </p>\n              </div>\n            </AnimateInView>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
      "name": "Feature_08",
      "props": {
        "title": "我们的核心优势",
        "description": "AIGCODE致力于提供高效、智能和创新的代码生成服务，帮助企业快速实现数字化转型。",
        "features": [
          {
            "icon": "fa-solid fa-robot",
            "title": "智能代码生成",
            "description": "基于AI技术，自动生成高质量代码，提升开发效率。"
          },
          {
            "icon": "fa-solid fa-shield-alt",
            "title": "安全可靠",
            "description": "采用先进的安全技术，确保代码质量与数据安全。"
          },
          {
            "icon": "fa-solid fa-cogs",
            "title": "定制化解决方案",
            "description": "根据企业需求量身打造，满足各种业务场景。"
          },
          {
            "icon": "fa-solid fa-chart-line",
            "title": "技术驱动增长",
            "description": "以创新技术为核心，助力企业实现业务增长。"
          },
          {
            "icon": "fa-solid fa-users",
            "title": "专业团队支持",
            "description": "拥有经验丰富的技术团队，提供全方位支持。"
          },
          {
            "icon": "fa-solid fa-lightbulb",
            "title": "持续创新",
            "description": "不断研发新功能与技术，为企业创造更多价值。"
          }
        ]
      },
      "id": "1nRuVy7XVbBJox2MHei1x"
    },
    "kmKbFPgku_l1hUxT1p6BH": {
      "code": "function Categories_02({\n  categories = [\n    {\n      name: 'Innovative Designs',\n      products: '2,345 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?innovative,design',\n      key: 'design',\n    },\n    {\n      name: 'Ergonomic Chairs',\n      products: '1,234 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?ergonomic,chairs',\n      key: 'chairs',\n    },\n    {\n      name: 'Modern Desks',\n      products: '789 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?modern,desks',\n      key: 'desks',\n    },\n    {\n      name: 'Stylish Lamps',\n      products: '567 Products',\n      imageUrl: 'https://source.unsplash.com/800x700/?stylish,lamps',\n      key: 'lamps',\n    },\n  ],\n  title = 'Explore Our Categories',\n  subtitle = 'Discover unique pieces to accent your workspace',\n  buttonTextAttr = 'text=Browse All Categories&link=/',\n  buttonIcon = 'fa-solid fa-arrow-right',\n}) {\n  return (\n    <div className=\"w-full  dark:bg-slate-800 py-14\">\n      <section className=\"py-10 px-4 mx-auto max-w-7xl \">\n        <div className=\"text-center\">\n          <h2 className=\"TITLE-PRIMARY text-4xl font-bold text-slate-900 dark:text-white\">\n            <EditableText propKey=\"title\">{title}</EditableText>\n          </h2>\n          <p className=\"TITLE-SECONDARY mt-6 text-base font-normal text-slate-700 dark:text-white/80\">\n            <EditableText propKey=\"subtitle\">{subtitle}</EditableText>\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-5 mt-8 w-full h-full text-center sm:grid-cols-2 lg:grid-cols-4 sm:gap-6 sm:mt-12\">\n          {categories.map((category, index) => (\n            <AnimateInView key={category.key} type=\"rise\">\n              <div className=\"relative w-full h-full group overflow-hidden rounded-lg\">\n                <div className=\"absolute w-full h-full inset-0 \">\n                  <EditableImg\n                    propKey={`categories_${index}_imageUrl`}\n                    className=\"IMAGE object-cover w-full h-full aspect-[4/3] rounded-lg bg-slate-100 dark:bg-slate-900\"\n                    src={`${category.imageUrl}`}\n                    alt={category.imageUrl}\n                  />\n                </div>\n\n                <div className=\"relative p-6\">\n                  <span className=\"inline-flex items-center justify-center px-3 py-1.5 text-sm font-bold text-gray-900 bg-white rounded opacity-100 group-hover:opacity-0\">\n                    <EditableText propKey={`categories_${index}_name`}>{category.name}</EditableText>\n                  </span>\n                </div>\n\n                <div className=\"absolute inset-0 flex items-center justify-center bg-black transition-all duration-300 opacity-0 group-hover:opacity-80\">\n                  <div className=\"flex flex-col items-center\">\n\n                    <span className=\"mt-1 text-lg font-bold text-white\">\n                      <EditableButton className=\"TEXT-LINK\">\n                        <EditableText propKey={`categories_${index}_name`}>{category.name}</EditableText>\n                      </EditableButton>\n                    </span>\n                    <span className=\"DESC mt-1.5 text-sm font-medium text-gray-200\">\n                      <EditableText propKey={`categories_${index}_products`}>{category.products}</EditableText>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </AnimateInView>\n          ))}\n        </div>\n\n        <AnimateInView>\n          <div className=\"mt-12 text-center\">\n            <EditableButton\n              className=\"BTN-PRIMARY inline-flex gap-1 group text-sky-400 items-center justify-center px-6 py-2 text-sm font-medium  dark:text-sky-300 border border-sky-400 dark:border-sky-300 rounded-lg  dark:bg-slate-800 transition-colors duration-500\"\n            >\n              <EditableText propKey=\"buttonTextAttr\">{buttonTextAttr}</EditableText>\n              <EditableIcon propKey=\"buttonIcon\" icon={buttonIcon} className=\"group-hover:translate-x-1 transition-all duration-300\" />\n            </EditableButton>\n          </div>\n        </AnimateInView>\n      </section>\n    </div>\n  );\n}\n",
      "name": "Categories_02",
      "props": {
        "categories": [
          {
            "name": "智能生成工具",
            "products": "1,200+ 工具",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/6c4310d8-c6bb-4701-ab4e-c9702ec9e8e2.jpeg?oldPrompt=产品分类展示, 清晰布局, 高效浏览体验, 无干扰元素, 负面词: 无",
            "key": "tools"
          },
          {
            "name": "代码优化服务",
            "products": "800+ 服务",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/597da0fa-2180-4c6e-accf-a1f720d1ffe8.jpeg?oldPrompt=企业文化展示, 现代设计, 专业形象, 无干扰元素, 负面词: 无",
            "key": "optimization"
          },
          {
            "name": "企业解决方案",
            "products": "500+ 方案",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/81386cb5-0eb5-4243-ae50-badf1a108bed.jpeg?oldPrompt=服务分类展示, 简洁界面, 直观选择, 无干扰元素, 负面词: 无",
            "key": "solutions"
          },
          {
            "name": "数据分析支持",
            "products": "300+ 服务",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/134d63f8-329a-471b-8456-abd3cfdcc593.jpeg?oldPrompt=企业核心优势展示, 现代简约风格, 专业氛围, 无干扰元素, 负面词: 无",
            "key": "analytics"
          }
        ],
        "title": "探索我们的产品与服务",
        "subtitle": "发现适合您业务需求的智能化解决方案",
        "buttonTextAttr": "text=浏览全部分类&link=",
        "buttonIcon": "fa-solid fa-arrow-right"
      },
      "id": "kmKbFPgku_l1hUxT1p6BH"
    },
    "YbMdAeJjTLuBxB-9R6kQZ": {
      "code": "function Testimonial_05({\n  title = `Hear From Our Happy Clients`,\n  testimonials = [\n    {\n      quote: `The design workshop transformed our vision into reality.`,\n      name: `Dianne Russell`,\n      age: `26 years old`,\n      location: `New York`,\n      avatarUrl: `https://source.unsplash.com/900x680/?avatar,2`,\n    },\n    {\n      quote: `Their creativity and attention to detail is unmatched.`,\n      name: `Theresa Webb`,\n      age: `23 years old`,\n      location: `London`,\n      avatarUrl: `https://source.unsplash.com/1200x680/?avatar,1`,\n    },\n  ]\n}) {\n  return (\n    <section className=\"py-10 bg-white dark:bg-slate-800\">\n      <div className=\"mx-auto max-w-7xl px-4 py-10 flex flex-col items-center gap-16\">\n        <AnimateInView type=\"rise\">\n          <div className=\"text-center\">\n            <h2 className=\"TITLE-PRIMARY text-5xl font-semibold text-slate-900 dark:text-white\">\n              <EditableText propKey=\"title\">{title}</EditableText>\n            </h2>\n          </div>\n        </AnimateInView>\n\n        <div className=\" grid grid-cols-1 gap-10 md:grid-cols-2\">\n          {testimonials.map((testimonial, index) => (\n            <AnimateInView type=\"rise\">\n              <div key={index}>\n                <p className=\"DESC text-lg font-semibold text-slate-900 dark:text-white\">\n                  <EditableText propKey={`testimonials_${index}_quote`}>\n                    {testimonial.quote}\n                  </EditableText>\n                </p>\n                <div className=\"relative mt-6 overflow-hidden rounded-lg\">\n                  <EditableImg\n                    propKey={`testimonials_${index}_avatarUrl`}\n                    className=\"IMAGE rounded-lg bg-slate-100 dark:bg-slate-900 w-full h-auto aspect-[16/9] object-cover\"\n                    src={testimonial.avatarUrl}\n                    alt={testimonial.avatarUrl}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between mt-5\">\n                  <p className=\"TEXT-CONTENT text-base font-bold text-slate-900 dark:text-white/90\">\n                    <EditableText propKey={`testimonials_${index}_name`}>\n                      {testimonial.name}\n                    </EditableText>\n                  </p>\n                  <p className=\"TEXT-CONTENT flex gap-1 text-sm text-slate-600 dark:text-slate-400\">\n                    <EditableText propKey={`testimonials_${index}_age`}>\n                      {testimonial.age},\n                    </EditableText>\n                    <EditableText propKey={`testimonials_${index}_location`}>\n                      {testimonial.location}\n                    </EditableText>\n                  </p>\n                </div>\n              </div>\n            </AnimateInView>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "name": "Testimonial_05",
      "props": {
        "title": "客户的成功故事",
        "testimonials": [
          {
            "quote": "AIGCODE的智能生成技术大幅提升了我们的开发效率。",
            "name": "张伟",
            "age": "35岁",
            "location": "北京",
            "avatarUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/51d82166-f75a-4ff8-bd4e-3675417fb27e.jpeg?oldPrompt=专业团队与客户在现代化会议室中讨论项目, 白板上有清晰的项目计划和数据图表, 双方表情专注且满意, 氛围专业且友好, 体现高效合作和客户认可"
          },
          {
            "quote": "他们的定制化解决方案帮助我们实现了业务的快速扩展。",
            "name": "李娜",
            "age": "29岁",
            "location": "上海",
            "avatarUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/d9c62a7b-40b5-4049-8198-3ac18285aedc.jpeg?oldPrompt=客户手持我们的产品站在办公环境中, 背景是简洁现代的办公室设计, 客户面带微笑, 展示产品使用效果, 体现产品实用性和客户满意度"
          }
        ]
      },
      "id": "YbMdAeJjTLuBxB-9R6kQZ"
    },
    "8WzNEENDHtQFoLLITmn2T": {
      "code": "function BlogGrid_01({\n  title = `Latest from our studio`,\n  description = `Explore insightful articles on design, creativity, and collaboration.`,\n  articles = [\n    {\n      category: `Design`,\n      date: `March 15, 2023`,\n      title: `Bringing creativity to life with modern design`,\n      imageUrl: `https://source.unsplash.com/800x700/?studio,creative`,\n      url: `#`,\n    },\n    {\n      category: `Branding`,\n      date: `March 30, 2023`,\n      title: `The art of storytelling through brand identity`,\n      imageUrl: `https://source.unsplash.com/800x700/?branding,identity`,\n      url: `#`,\n    },\n    {\n      category: `Innovation`,\n      date: `April 05, 2023`,\n      title: `Embracing change in a digital-driven world`,\n      imageUrl: `https://source.unsplash.com/800x700/?innovation,digital`,\n      url: `#`,\n    },\n  ],\n}) {\n  return (\n    <section className=\"py-12 bg-white dark:bg-slate-800 sm:py-16 lg:py-20\">\n      <div className=\"px-4 mx-auto sm:px-6 lg:px-8 max-w-7xl\">\n        <div className=\"max-w-lg mx-auto text-center\">\n          <h2 className=\"TITLE-PRIMARY text-4xl font-semibold text-slate-900 dark:text-slate-50\">\n            <EditableText propKey=\"title\">{title}</EditableText>\n          </h2>\n          <p className=\"DESC max-w-md mx-auto mt-5 text-base font-normal leading-7 text-slate-700 dark:text-slate-300\">\n            <EditableText propKey=\"description\">{description}</EditableText>\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-12 mt-12 xl:gap-20 sm:grid-cols-2 lg:grid-cols-3 sm:mt-16\">\n          {articles.map((article, index) => (\n            <EditableButton key={index} className=\"TEXT-LINK group\" target=\"_blank\" href={article.url}>\n              <div title={article.title} className=\"block overflow-hidden aspect-w-16 aspect-h-9 rounded-xl\">\n                <AnimateInView type=\"rise\">\n                  <EditableImg\n                    propKey={`articles_${index}_imageUrl`}\n                    className=\"IMAGE rounded-lg bg-slate-100 object-cover w-full h-full aspect-[1/1] transition-all duration-200 transform group-hover:scale-110\"\n                    src={article.imageUrl}\n                    alt={article.title}\n                  />\n                </AnimateInView>\n              </div>\n              <div className=\"flex items-center mt-6 space-x-2\">\n                <p className=\"TEXT-CONTENT text-sm font-medium text-slate-900 dark:text-slate-200\">\n                  <EditableText propKey={`articles_${index}_category`}>{article.category}</EditableText>\n                </p>\n                <span className=\"text-sm font-medium text-slate-900 dark:text-slate-200\"> • </span>\n                <p className=\"TEXT-CONTENT text-sm font-medium text-slate-900 dark:text-slate-200\">\n                  <EditableText propKey={`articles_${index}_date`}>{article.date}</EditableText>\n                </p>\n              </div>\n              <p className=\"TITLE-SECONDARY mt-4 text-xl text-left font-semibold text-slate-900 dark:text-slate-200 group-hover:text-slate-600 dark:group-hover:text-white\">\n                <EditableText propKey={`articles_${index}_title`}>{article.title}</EditableText>\n              </p>\n            </EditableButton>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
      "name": "BlogGrid_01",
      "props": {
        "title": "最新动态",
        "description": "了解AIGCODE的最新技术突破与行业资讯。",
        "articles": [
          {
            "category": "技术",
            "date": "2023年10月15日",
            "title": "AI驱动的代码生成：未来已来",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/e8482222-5d24-4184-b70e-f98bd224c7f0.jpeg?oldPrompt=产品展示台，高科技设备陈列，突显企业技术优势",
            "url": ""
          },
          {
            "category": "创新",
            "date": "2023年10月18日",
            "title": "如何通过智能工具提升企业效率",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/7e5ce25d-47cc-4a4b-bc34-b99a8d9aae83.jpeg?oldPrompt=团队会议场景，成员围绕桌子讨论，体现企业协作文化",
            "url": ""
          },
          {
            "category": "行业洞察",
            "date": "2023年10月20日",
            "title": "技术变革对企业的深远影响",
            "imageUrl": "https://cdn.a1.art/assets/images/app_1811317900177637378/1811317900181831681/64e6dafd-9946-4823-9cb8-17ad301ad0c5.jpeg?oldPrompt=现代办公室环境，员工在电脑前工作，展示企业专业形象",
            "url": ""
          }
        ]
      },
      "id": "8WzNEENDHtQFoLLITmn2T"
    },
    "X1-sIt7B-DXYOLkxkR-5z": {
      "code": "function Contact_05({\n  greeting = `Say hello to Our Design Studio`,\n  mainTitle = `Interested in collaborating?`,\n  workingHours = `Monday-Friday, 9:00 am to 6:00 pm`,\n  workingHoursDetails = `Our team is available for your queries.`,\n  email = `connect@designstudio.com`,\n  title = `Send us a message`,\n  socialLinks = [\n    { name: `Instagram`, url: `https://instagram.com` },\n    { name: `Medium`, url: `https://medium.com` },\n    { name: `Facebook`, url: `https://facebook.com` },\n    { name: `Behance`, url: `https://behance.net` },\n    { name: `LinkedIn`, url: `https://linkedin.com` },\n    { name: `Dribbble`, url: `https://dribbble.com` },\n  ],\n}) {\n  return (\n    <section className=\"py-10 bg-gradient-to-b from-gray-900 to-gray-600 sm:py-16 lg:py-20 xl:py-24\">\n      <div className=\"mx-auto px-4 max-w-7xl\">\n        <div className=\"grid items-end max-w-5xl grid-cols-1 mx-auto md:grid-cols-2 gap-y-10 gap-x-48\">\n          <div>\n            <p className=\"DESC text-base font-semibold text-white/60\"><EditableText propKey=\"greeting\">{greeting}</EditableText></p>\n            <h2 className=\"TITLE-PRIMARY mt-6 text-4xl font-semibold text-white md:text-5xl\">\n              <EditableText propKey=\"mainTitle\">{mainTitle}</EditableText>\n            </h2>\n\n            <p className=\"DESC mt-10 text-base font-normal  text-white/90 md:mt-40\">\n              <EditableText propKey=\"workingHours\">{workingHours}</EditableText>\n              <span className=\"block text-white/60\">\n                <EditableText propKey=\"workingHoursDetails\">{workingHoursDetails}</EditableText>\n              </span>\n            </p>\n          </div>\n\n          <div>\n            <div className=\"flex flex-col gap-5\">\n              <p className=\"DESC text-xs font-semibold tracking-widest text-white/60 uppercase\">\n                <EditableText propKey=\"title\">{title}</EditableText>\n              </p>\n              <p className=\"TEXT-LINK text-base font-normal\">\n                <EditableButton className=\"hover:underline text-white/90\" href={`mailto:${email}`} title={email}>\n                  <EditableText propKey=\"email\">{email}</EditableText>\n                </EditableButton>\n              </p>\n            </div>\n\n            <div className=\"mt-10 md:mt-24\">\n              <p className=\"DESC text-xs font-semibold tracking-widest text-white/60 uppercase\">Follow Us</p>\n              <div className=\"grid grid-cols-2 mt-5 gap-y-4 gap-x-8\">\n                {socialLinks.map((link, index) => (\n                  <p key={index} className=\"TEXT-LINK text-base font-normal\">\n                    <EditableButton className=\"hover:underline text-white/90\" href={link.url} title={link.name}>\n                      <EditableText propKey={`socialLinks_${index}_name`}>{link.name}</EditableText>\n                    </EditableButton>\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}",
      "name": "Contact_05",
      "props": {
        "greeting": "欢迎与AIGCODE联系",
        "mainTitle": "期待与您合作",
        "workingHours": "周一至周五，上午9:00至下午6:00",
        "workingHoursDetails": "我们的团队随时为您解答问题。",
        "email": "contact@aigcode.com",
        "title": "发送信息给我们",
        "socialLinks": [
          {
            "name": "LinkedIn",
            "url": "https://linkedin.com"
          },
          {
            "name": "Twitter",
            "url": "https://twitter.com"
          },
          {
            "name": "Facebook",
            "url": "https://facebook.com"
          }
        ]
      },
      "id": "X1-sIt7B-DXYOLkxkR-5z"
    }
  },
  "children": [
    "wxZS06ARxR94bIqLH0IyG",
    "1nRuVy7XVbBJox2MHei1x",
    "kmKbFPgku_l1hUxT1p6BH",
    "YbMdAeJjTLuBxB-9R6kQZ",
    "8WzNEENDHtQFoLLITmn2T",
    "X1-sIt7B-DXYOLkxkR-5z"
  ],
  "extra": {
    "color": {
      "name": "ai",
      "colorHex": "#000000"
    },
    "webTheme": "AIGCODE,Enterprise,Technology",
    "font": {
      "heading": "Montserrat",
      "body": "Roboto"
    }
  },
  "id": "iU00-fDwez5khVEK4dRtZ",
  "version": "1.0.0",
  "navigation": {
    "code": "function Navigation_06({\n  logo = 'https://cdn.wegic.ai/assets/onepage/thread/icon/default.png',\n  navItems = [\n    'text=Home&link=/home',\n    'text=About&link=/about',\n    'text=Service&link=/service',\n    'text=Case&link=/case',\n    'text=Blog&link=/blog',\n    'text=Contact&link=/contact',\n    'text=Location&link=/location',\n    'text=Map&link=/map',\n  ],\n  primaryButton = {\n    icon: 'fa-solid fa-arrow-right',\n    textAttr: 'Contact us',\n    textColor: 'white',\n  },\n  secondaryButton,\n  fixedTop = false,\n  logoSize = 40,\n  showButton = true,\n  maxCount = 7,\n}) {\n  const NAV_GAP = React.useMemo(() => 64, []);\n  const LOGO_MAX_WIDTH = React.useMemo(() => 300, []);\n  const MOBILE_WIDTH = React.useMemo(() => 768, []);\n  const MIN_PAGE_WIDTH = React.useMemo(() => 300, []);\n  const viewportId = React.useMemo(() => window?.siteEngine?.scrollContainerId || 'preview-viewport', []);\n  const [viewportHeight, setViewportHeight] = React.useState(0);\n  const [mobileMode, setMobileMode] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n  const moreButtonRef = React.useRef(null);\n  const [moreListVisible, setMoreListVisible] = React.useState(false);\n  const mobileListRef = React.useRef(null);\n  const [mobileListVisible, setMobileListVisible] = React.useState(false);\n  const [mobileEntryVisible, setMobileEntryVisible] = React.useState(false);\n  const lastScrollTopRef = React.useRef(0);\n  const buttonVisible = showButton && (secondaryButton || primaryButton);\n  const layoutObject = React.useMemo(() => {\n    const layout = {\n      logoSize: 0,\n      navHeight: 0,\n      buttonHeight: 0,\n      buttonPX: 0,\n      fontSize: 0,\n      dropDownHeight: 0,\n      dropDownPaddingLeft: 0,\n      dropDownPaddingRight: 0,\n      mobileNavHeight: 56,\n      mobileNavItemHeight: 56,\n      mobileFontSize: 14,\n      mobileIconSize: 20,\n    };\n\n    if (logoSize < 48) {\n      layout.fontSize = 14;\n      layout.dropDownHeight = 48;\n      layout.dropDownPaddingLeft = 12;\n      layout.dropDownPaddingRight = 48;\n    } else if (logoSize >= 48 && logoSize < 64) {\n      layout.fontSize = 15;\n      layout.dropDownHeight = 64;\n      layout.dropDownPaddingLeft = 20;\n      layout.dropDownPaddingRight = 80;\n    } else if (logoSize >= 64) {\n      layout.fontSize = 16;\n      layout.dropDownHeight = 64;\n      layout.dropDownPaddingLeft = 20;\n      layout.dropDownPaddingRight = 80;\n    }\n\n    if (mobileMode) {\n      if (logoSize < 56) {\n        layout.logoSize = 32;\n        layout.mobileNavHeight = 56;\n        layout.mobileFontSize = 14;\n        layout.mobileIconSize = 20;\n      } else {\n        layout.logoSize = 48;\n        layout.mobileNavHeight = 72;\n        layout.mobileFontSize = 16;\n        layout.mobileIconSize = 24;\n      }\n    } else {\n      layout.logoSize = logoSize;\n      if (logoSize < 56) {\n        layout.navHeight = logoSize + 24;\n      } else if (logoSize >= 56 && logoSize < 64) {\n        layout.navHeight = logoSize + 40;\n      } else {\n        layout.navHeight = 120;\n      }\n    }\n\n    /** button */\n    if (logoSize < 48) {\n      layout.buttonHeight = 40;\n      layout.buttonPX = 20;\n    } else if (logoSize >= 48 && logoSize < 56) {\n      layout.buttonHeight = 48;\n      layout.buttonPX = 20;\n    } else {\n      layout.buttonHeight = 56;\n      layout.buttonPX = 28;\n    }\n\n    return layout;\n  }, [logoSize, mobileMode]);\n  const [isOverWidthLogo, setIsOverWidthLogo] = React.useState(false);\n  const logoRectRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const logoRef = React.useRef(null);\n  const buttonContainerRef = React.useRef(null);\n  const [pageWidth, setPageWidth] = React.useState(0);\n  const [minPageWidth, setMinPageWidth] = React.useState(MIN_PAGE_WIDTH);\n  const [skeletonMinWidth, setSkeletonMinWidth] = React.useState(MIN_PAGE_WIDTH);\n  const [logoWidth, setLogoWidth] = React.useState(0);\n  const [buttonContainerWidth, setButtonContainerWidth] = React.useState(0);\n  const [minLimit, setMinLimit] = React.useState(false);\n  const [leftLimit, setLeftLimit] = React.useState(false);\n  const [rightLimit, setRightLimit] = React.useState(false);\n  const center = React.useMemo(() => !leftLimit && !rightLimit, [leftLimit, rightLimit]);\n\n  const handlePageWidthUpdate = React.useCallback(() => {\n    if (mobileMode || !logoWidth) {\n      return;\n    }\n    const contentWidth = contentRef.current?.clientWidth || 0;\n    const leftRestWidth = contentWidth / 2 - logoWidth - NAV_GAP;\n    const rightRestWidth = contentWidth / 2 - buttonContainerWidth - NAV_GAP;\n    const pageItemWidth = Math.max(Math.min(leftRestWidth, rightRestWidth) * 2, minPageWidth);\n    const newMinLimit = logoWidth + NAV_GAP + minPageWidth + NAV_GAP + buttonContainerWidth > contentWidth;\n\n    const newSkeletonMinWidth = newMinLimit ? minPageWidth : Math.max(contentWidth - logoWidth - buttonContainerWidth - NAV_GAP * 2, minPageWidth);\n\n    const leftLimit = contentWidth / 2 - logoWidth - NAV_GAP < minPageWidth / 2;\n    const rightLimit = contentWidth / 2 - buttonContainerWidth - NAV_GAP < minPageWidth / 2;\n    setLeftLimit(leftLimit);\n    setRightLimit(rightLimit);\n    setMinLimit(newMinLimit);\n    setPageWidth(pageItemWidth);\n    setSkeletonMinWidth(newSkeletonMinWidth);\n  }, [minPageWidth, mobileMode, logoWidth, buttonContainerWidth]);\n\n  React.useEffect(() => {\n    handlePageWidthUpdate();\n  }, [logoSize, isOverWidthLogo, navItems, showButton, primaryButton, secondaryButton, handlePageWidthUpdate]);\n\n  React.useEffect(() => {\n    setMinPageWidth(MIN_PAGE_WIDTH);\n  }, [navItems]);\n\n  /** navigation ResizeObserver start */\n  const handleViewportWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      const width = Math.min(window.innerWidth, rect.width);\n      const height = Math.min(window.innerHeight, rect.height);\n      setViewportHeight(height);\n      if (width > MOBILE_WIDTH) {\n        mobileMode && setMobileMode(false);\n        handlePageWidthUpdate();\n      } else {\n        !mobileMode && setMobileMode(true);\n      }\n    }, 32),\n    [mobileMode, handlePageWidthUpdate]\n  );\n\n  React.useEffect(() => {\n    const scrollDom = document.getElementById(viewportId);\n    const observer = new ResizeObserver(handleViewportWidthChange);\n    observer.observe(scrollDom);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [viewportId, handleViewportWidthChange]);\n  /** navigation ResizeObserver end */\n\n  /** logo ResizeObserver start */\n  const handleLogoWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      rect.width && setLogoWidth(rect.width);\n    }, 32),\n    []\n  );\n\n  React.useEffect(() => {\n    if (!logoRef.current || mobileMode) {\n      return;\n    }\n    const observer = new ResizeObserver(handleLogoWidthChange);\n    observer.observe(logoRef.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [mobileMode, handleLogoWidthChange]);\n  /** logo ResizeObserver end */\n\n  /** button ResizeObserver start */\n  const handleButtonWidthChange = React.useCallback(\n    throttle((entries) => {\n      const entry = entries[0];\n      const rect = entry.contentRect;\n      rect.width && setButtonContainerWidth(rect.width);\n    }, 32),\n    []\n  );\n\n  React.useEffect(() => {\n    if (!buttonContainerRef.current || mobileMode || minLimit || !buttonVisible) {\n      return;\n    }\n    const observer = new ResizeObserver(handleButtonWidthChange);\n    observer.observe(buttonContainerRef.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [mobileMode, handleButtonWidthChange, minLimit, buttonVisible]);\n  /** button ResizeObserver end */\n\n  React.useEffect(() => {\n    if (!mobileMode) {\n      setMobileListVisible(false);\n    } else {\n      setMoreListVisible(false);\n    }\n  }, [mobileMode]);\n\n  const handleCloseMoreList = (e) => {\n    if (moreButtonRef.current?.contains(e.target)) {\n      return;\n    }\n    if (moreListVisible) {\n      setMoreListVisible(false);\n    }\n  };\n\n  React.useEffect(() => {\n    moreListVisible && window.addEventListener('click', handleCloseMoreList);\n    return () => {\n      window.removeEventListener('click', handleCloseMoreList);\n    };\n  }, [moreListVisible]);\n\n  React.useEffect(() => {\n    const handleScroll = throttle((e) => {\n      if (fixedTop || !e.target) {\n        return;\n      }\n      if (mobileListVisible) {\n        setMobileListVisible(false);\n      }\n      const viewportHeight = window.innerHeight;\n      const scrollTop = e.target.scrollTop;\n      if (lastScrollTopRef.current < scrollTop) {\n        if (scrollTop >= viewportHeight / 2) {\n          !hidden && setHidden(true);\n        } else {\n          hidden && setHidden(false);\n        }\n      } else {\n        hidden && setHidden(false);\n      }\n      lastScrollTopRef.current = scrollTop;\n    }, 32);\n\n    let scrollContainer = window?.document.getElementById(viewportId);\n    scrollContainer?.addEventListener('scroll', handleScroll);\n    return () => {\n      scrollContainer?.removeEventListener('scroll', handleScroll);\n    };\n  }, [hidden, fixedTop, mobileListVisible]);\n\n  React.useEffect(() => {\n    let count = navItems.length;\n    if (showButton) {\n      if (primaryButton) count++;\n      if (secondaryButton) count++;\n    }\n\n    setMobileEntryVisible(count > 1);\n    count <= 1 && setMobileListVisible(false);\n  }, [primaryButton, secondaryButton, navItems, showButton]);\n\n  /** update logo mode start */\n  const handleImageAspectRatioUpdate = () => {\n    if (!logoRectRef.current) {\n      return;\n    }\n    const currentAspectRatio = LOGO_MAX_WIDTH / layoutObject.logoSize;\n    const { naturalWidth, naturalHeight } = logoRectRef.current;\n    const aspectRatio = naturalWidth / naturalHeight;\n    setIsOverWidthLogo(aspectRatio > currentAspectRatio);\n  };\n\n  React.useEffect(() => {\n    if (logoRectRef.current?.logo === logo) {\n      handleImageAspectRatioUpdate();\n      return;\n    }\n\n    const image = new Image();\n    image.onload = () => {\n      logoRectRef.current = {\n        logo,\n        naturalWidth: image.naturalWidth,\n        naturalHeight: image.naturalHeight,\n      };\n      handleImageAspectRatioUpdate();\n    };\n\n    image.src = logo;\n  }, [logo, layoutObject]);\n  /** update logo mode end */\n\n  const renderNavItem = (item, index) => {\n    return (\n      <EditableButton\n        key={item}\n        style={{ fontSize: layoutObject.fontSize }}\n        className={`${\n          index ? 'ml-8' : ''\n        } py-3 text-white whitespace-nowrap cursor-pointer duration-50 dark:text-white dark:hover:text-white/60  relative after:content-[''] after:absolute after:bottom-[11px] after:right-0 hover:after:left-0 after:h-[1px] after:bg-white after:max-w-96 after:w-0 hover:after:w-full after:transition-all after:duration-300`}\n      >\n        <EditableText propKey={`navItems_${index}`}>{item}</EditableText>\n      </EditableButton>\n    );\n  };\n\n  const renderMoreListItems = (items, startIndex = 0) => {\n    return items.map((item, index) => (\n      <EditableButton\n        key={item}\n        style={{\n          height: layoutObject.dropDownHeight,\n          paddingLeft: layoutObject.dropDownPaddingLeft,\n          paddingRight: layoutObject.dropDownPaddingRight,\n          fontSize: layoutObject.fontSize,\n        }}\n        className=\"flex-shrink-0 w-full h-full text-white whitespace-nowrap cursor-pointer text-left dark:text-white dark:hover:text-white/60 rounded-md hover:bg-[#ffffff0f] transition-colors\"\n        onClick={() => setMoreListVisible(false)}\n      >\n        <EditableText propKey={`navItems_${startIndex + index}`}>{item}</EditableText>\n      </EditableButton>\n    ));\n  };\n\n  const renderRest = (omittedItems) => (\n    <div className=\"relative ml-8 \">\n      <motion.button\n        ref={moreButtonRef}\n        className=\"w-10 h-10 flex items-center justify-center flex-shrink-0\"\n        onClick={() => setMoreListVisible(!moreListVisible)}\n        whileTap={{ scale: 0.9 }}\n        style={{ fontSize: layoutObject.fontSize }}\n      >\n        <svg\n          style={{ transform: 'translateY(2px)' }}\n          className=\"hover:transition-all hover:scale-110 text-white dark:text-black\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"3\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n          <circle cx=\"10\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n          <circle cx=\"17\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n        </svg>\n      </motion.button>\n      {moreListVisible && (\n        <AnimatePresence>\n          <motion.div\n            style={{\n              boxShadow: '0px 2px 4px 0px rgba(0, 0, 0, 0.06)',\n              fontSize: layoutObject.fontSize,\n            }}\n            className={`max-h-96 overflow-auto overscroll-contain absolute z-40 top-full right-0 flex flex-col p-1 rounded-md bg-[#000000C4]  border border-[#0000000a]`}\n            animate={{\n              scale: [0, 1],\n              opacity: [0, 1],\n            }}\n          >\n            {renderMoreListItems(omittedItems, navItems.length - omittedItems.length)}\n          </motion.div>\n        </AnimatePresence>\n      )}\n    </div>\n  );\n\n  const handleOverflowUpdate = (widths, overflow) => {\n    if (mobileMode) {\n      return;\n    }\n\n    if (widths.length >= 2) {\n      const firstItemWidth = widths[0];\n      const restItemWidth = overflow ? widths[widths.length - 1] : 72;\n      setMinPageWidth(firstItemWidth + restItemWidth);\n    } else if (navItems.length === 1 && widths.length && widths[0]) {\n      setMinPageWidth(widths[0]);\n    } else setMinPageWidth(MIN_PAGE_WIDTH);\n  };\n\n  const renderNavList = (items) => {\n    return (\n      <div\n        className={`${buttonVisible ? 'absolute' : 'flex flex-1 flex-shrink'} ${\n          center ? (buttonVisible ? 'left-1/2 -translate-x-1/2' : '') : leftLimit || minLimit ? `left-[${logoWidth + NAV_GAP}px]` : `right-[${buttonContainerWidth + NAV_GAP}px]`\n        } ${moreListVisible ? '' : 'overflow-hidden'}`}\n        style={{ width: buttonVisible ? pageWidth : undefined, minWidth: buttonVisible ? minPageWidth : undefined }}\n      >\n        <Overflow\n          data={items}\n          style={{ height: layoutObject.logoSize }}\n          className={`flex items-center ${buttonVisible ? 'justify-center' : 'justify-end'} flex-shrink flex-1`}\n          renderItem={renderNavItem}\n          maxCount={maxCount}\n          minCount={1}\n          renderRest={renderRest}\n          onUpdate={handleOverflowUpdate}\n        />\n      </div>\n    );\n  };\n\n  const handleMobileButtonClick = (e) => {\n    mobileListVisible && setMobileListVisible(false);\n  };\n\n  const renderContent = () => {\n    if (mobileMode) {\n      return (\n        <div className=\"flex flex-col h-full w-full\">\n          <div\n            className=\"relative flex flex-shrink-0 z-40 w-full pl-4  justify-between  items-center  overflow-hidden md:hidden\"\n            style={{\n              height: layoutObject.mobileNavHeight,\n              fontSize: layoutObject.mobileFontSize,\n            }}\n          >\n            <EditableImg\n              propKey=\"logo\"\n              style={{\n                height: isOverWidthLogo ? undefined : layoutObject.logoSize,\n              }}\n              className={`${isOverWidthLogo ? `!w-[${LOGO_MAX_WIDTH}px]` : `!w-auto`} !max-w-[${LOGO_MAX_WIDTH}px] object-cover flex-shrink min-w-0`}\n              src={logo}\n              alt=\"logo\"\n            />\n            <motion.button\n              className={`${!mobileEntryVisible ? 'hidden' : ''}  flex justify-center items-center text-white flex-shrink-0`}\n              onClick={() => setMobileListVisible(!mobileListVisible)}\n              whileTap={{ scale: 0.9 }}\n              style={{\n                width: layoutObject.mobileNavHeight,\n                height: layoutObject.mobileNavHeight,\n                fontSize: layoutObject.mobileFontSize,\n              }}\n            >\n              {mobileListVisible ? (\n                <svg width={layoutObject.mobileIconSize} height={layoutObject.mobileIconSize} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M4 16L16 4.25115\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M4 4L16 15.7489\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                </svg>\n              ) : (\n                <svg width={layoutObject.mobileIconSize} height={layoutObject.mobileIconSize} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M3 5L16.375 5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M3 10H16.375\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  <path d=\"M3 15H16.375\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                </svg>\n              )}\n            </motion.button>\n          </div>\n          {mobileListVisible && (\n            <div\n              ref={mobileListRef}\n              className=\"relative z-50 flex flex-grow flex-shrink flex-col rounded-b-3xl shadow-xl overflow-hidden md:hidden\"\n              style={{ fontSize: layoutObject.mobileFontSize }}\n            >\n              <motion.nav\n                className={`w-full h-full flex flex-col rounded-b-3xl`}\n                animate={{\n                  y: [20, 0],\n                  opacity: [0, 1],\n                }}\n                transition={{\n                  duration: 0.4,\n                }}\n              >\n                <div className=\"flex flex-col flex-grow flex-shrink overflow-auto overscroll-contain\">\n                  {navItems.map((item, navIndex) => (\n                    <EditableButton\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        maxHeight: layoutObject.mobileNavItemHeight,\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      key={item}\n                      onClick={handleMobileButtonClick}\n                      className=\"w-full flex-grow-0 flex-shrink-0 text-white whitespace-nowrap cursor-pointer duration-50 dark:text-black dark:hover:text-black/60 select-none hover:bg-white/10 transition-colors\"\n                    >\n                      <EditableText propKey={`navItems_${navIndex}`}>{item}</EditableText>\n                    </EditableButton>\n                  ))}\n                </div>\n                <div className={`${showButton ? '' : 'hidden'} w-full h-fit flex-shrink-0 flex items-center justify-between overflow-hidden gap-5 px-5 py-[10px]`}>\n                  {secondaryButton && (\n                    <EditableButton\n                      onClick={handleMobileButtonClick}\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      className={`BTN-SECONDARY overflow-hidden px-10 flex-1 group/nav whitespace-nowrap font-normal text-white flex justify-center gap-2 items-center rounded-full hover:bg-white/10 hover:transition-all hover:duration-300`}\n                    >\n                      <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"secondaryButton_textAttr\">\n                        {secondaryButton.textAttr}\n                      </EditableText>\n                      <EditableIcon\n                        propKey=\"secondaryButton_icon\"\n                        icon={secondaryButton.icon}\n                        iconLibrary=\"FontAwesome\"\n                        className=\" text-white group-hover/nav:translate-x-1 transition-all\"\n                      />\n                    </EditableButton>\n                  )}\n                  {primaryButton && (\n                    <EditableButton\n                      onClick={handleMobileButtonClick}\n                      style={{\n                        height: layoutObject.mobileNavItemHeight,\n                        color: 'white',\n                        fontSize: layoutObject.mobileFontSize,\n                      }}\n                      className={`BTN-PRIMARY overflow-hidden px-10 flex-1 group/nav whitespace-nowrap font-normal flex justify-center gap-2 items-center rounded-full border border-white bg-white/0 hover:bg-white/10 hover:transition-all hover:duration-300`}\n                    >\n                      <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"primaryButton_textAttr\">\n                        {primaryButton.textAttr}\n                      </EditableText>\n                      <EditableIcon\n                        propKey=\"primaryButton_icon\"\n                        icon={primaryButton.icon}\n                        iconLibrary=\"FontAwesome\"\n                        style={{\n                          color: 'white',\n                        }}\n                        className=\" group-hover/nav:translate-x-1 transition-all\"\n                      />\n                    </EditableButton>\n                  )}\n                </div>\n              </motion.nav>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          height: layoutObject.navHeight,\n        }}\n        className=\"relative w-full hidden gap-16 md:flex justify-between items-center\"\n      >\n        <div className={`w-fit h-full flex flex-shrink-0 items-center justify-start`} ref={logoRef} style={{ maxWidth: LOGO_MAX_WIDTH }}>\n          <EditableImg\n            propKey=\"logo\"\n            style={{\n              height: isOverWidthLogo ? undefined : layoutObject.logoSize,\n            }}\n            className={`${isOverWidthLogo ? `!w-[${LOGO_MAX_WIDTH}px]` : `!w-auto`} !max-w-[${LOGO_MAX_WIDTH}px] object-cover flex-shrink-0 min-w-0`}\n            src={logo}\n            alt=\"logo\"\n          />\n        </div>\n\n        {renderNavList(navItems)}\n        {buttonVisible && <div className=\"flex flex-shrink flex-1\" style={{ minWidth: leftLimit || rightLimit ? skeletonMinWidth : undefined }}></div>}\n\n        {buttonVisible && (\n          <div className={`w-fit h-full flex items-center justify-end overflow-hidden gap-3 ${minLimit ? 'flex-shrink' : 'flex-shrink-0'}`} ref={buttonContainerRef}>\n            {secondaryButton && (\n              <EditableButton\n                style={{\n                  height: layoutObject.buttonHeight,\n                  fontSize: layoutObject.fontSize,\n                }}\n                className={`BTN-SECONDARY max-w-[180px] w-fit px-5 group/nav whitespace-nowrap font-normal text-white flex gap-2 items-center rounded-full hover:bg-white/5 hover:transition-all hover:duration-300`}\n              >\n                <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"secondaryButton_textAttr\">\n                  {secondaryButton.textAttr}\n                </EditableText>\n                <EditableIcon\n                  propKey=\"secondaryButton_icon\"\n                  icon={secondaryButton.icon}\n                  iconLibrary=\"FontAwesome\"\n                  className=\"text-sm text-white group-hover/nav:translate-x-1 transition-all\"\n                />\n              </EditableButton>\n            )}\n            {primaryButton && (\n              <EditableButton\n                style={{\n                  height: layoutObject.buttonHeight,\n                  color: 'white',\n                  padding: `0 ${layoutObject.buttonPX}px`,\n                  fontSize: layoutObject.fontSize,\n                }}\n                className={`BTN-PRIMARY max-w-[180px] w-fit  group/nav whitespace-nowrap font-normal flex gap-2 items-center rounded-full border border-white bg-white/0 hover:bg-white/10 hover:transition-all hover:duration-300`}\n              >\n                <EditableText className=\"overflow-hidden text-ellipsis\" propKey=\"primaryButton_textAttr\">\n                  {primaryButton.textAttr}\n                </EditableText>\n                <EditableIcon\n                  propKey=\"primaryButton_icon\"\n                  icon={primaryButton.icon}\n                  iconLibrary=\"FontAwesome\"\n                  style={{\n                    color: 'white',\n                  }}\n                  className=\"text-sm group-hover/nav:translate-x-1 transition-all\"\n                />\n              </EditableButton>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <section\n      style={{\n        transitionTimingFunction: 'cubic-bezier(.165,.84,.44,1)',\n        transitionDuration: '300ms',\n        fontSize: layoutObject.fontSize,\n        height: mobileMode && mobileListVisible ? viewportHeight - 48 : 'auto',\n      }}\n      className={`fixed z-40 left-6 right-6 rounded-3xl outline-white/10 md:rounded-xl bg-black md:bg-[#000000C4] backdrop-blur-sm md:px-8 md:transition-all max-w-[1376px] m-auto ${\n        fixedTop || !hidden ? 'top-6' : 'top-[-130px]'\n      }`}\n    >\n      <div className=\"max-w-7xl mx-auto w-full h-full\" ref={contentRef}>\n        {renderContent()}\n      </div>\n    </section>\n  );\n}",
    "name": "Navigation_06",
    "props": {
      "fixedTop": false,
      "logo": "https://cdn.wegic.ai/assets/onepage/thread/icon/1742979702306.png",
      "logoSize": 40,
      "siteTitle": "AIGCODE",
      "navItems": [
        "text=首页&link=home",
        "text=关于我们&link=about-us",
        "text=产品与服务&link=products-and-services"
      ],
      "showButton": true,
      "primaryButton": {
        "icon": "fa-solid fa-arrow-right",
        "textAttr": "text=联系我们",
        "textColor": "#000000"
      },
      "version": 3
    },
    "id": "E7demUpzBjBZMdU_ACA80"
  },
  "footer": {
    "code": "function Footer_08({\n  companyCopyright = \"© 2023 Design Studio Works\",\n  links = [\n    { textAttr: \"text=About Us&link=/\" },\n    { textAttr: \"text=Our Services&link=/\" },\n    { textAttr: \"text=Privacy Policy&link=/\" },\n    { textAttr: \"text=Terms Conditions&link=/\" },\n    { textAttr: \"text=Support&link=/\" },\n  ],\n  socialIcons = [\n    { icon: \"fa-brands fa-twitter\", href: \"#\" },\n    { icon: \"fa-brands fa-facebook-f\", href: \"#\" },\n    { icon: \"fa-brands fa-instagram\", href: \"#\" },\n  ],\n}) {\n  return (\n    <section className=\"py-10 bg-black\">\n      <AnimateInView type=\"rise\">\n        <div className=\"mx-auto px-4 max-w-7xl py-10 flex flex-col items-center gap-12\">\n\n            <EditableText propKey=\"companyCopyright\" className=\"DESC ml-2  text-sm text-white/60\">{companyCopyright}</EditableText>\n\n\n          <div className=\"flex flex-col gap-8 items-center md:flex-row\">\n            <ul className=\"flex flex-col items-center gap-8 sm:flex-row\">\n              {links.map((link, index) => (\n                <li key={index}>\n                  <EditableButton className=\"TEXT-LINK text-sm text-white hover:text-sky-500 focus:text-sky-500  dark:hover:text-sky-500 dark:focus:text-sky-500\">\n                    <EditableText  propKey={`links_${index}_textAttr`}>{link.textAttr}</EditableText>\n                  </EditableButton>\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"w-full h-px bg-white/20 dark:bg-white/10 md:w-px md:h-6\"></div>\n\n            <ul className=\"flex items-center gap-8\">\n              {socialIcons.map((icon, index) => (\n                <li key={index} href={icon.href}>\n                  <EditableButton className=\"TEXT-LINK text-white\">\n                    <EditableIcon propKey={`socialIcons_${index}_icon`} icon={icon.icon} iconLibrary={\"FontAwesome\"} className=\"text-lg  hover:text-sky-500 focus:text-sky-500 dark:hover:text-sky-500 dark:focus:text-sky-500\"/>\n                  </EditableButton>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </AnimateInView>\n    </section>\n  );\n}\n",
    "name": "Footer_08",
    "props": {
      "companyCopyright": "© 2023 AIGCODE 版权所有",
      "links": [
        {
          "textAttr": "text=关于我们&link=about-us"
        },
        {
          "textAttr": "text=产品与服务&link=products-and-services"
        },
        {
          "textAttr": "text=隐私政策&link="
        },
        {
          "textAttr": "text=使用条款&link="
        },
        {
          "textAttr": "text=联系我们&link="
        }
      ],
      "socialIcons": [
        {
          "icon": "fa-brands fa-twitter",
          "href": "#"
        },
        {
          "icon": "fa-brands fa-facebook-f",
          "href": "#"
        },
        {
          "icon": "fa-brands fa-linkedin-in",
          "href": "#"
        }
      ]
    },
    "id": "Zp0vq9hS9oHuzgsY8Kn-U"
  }
}